{"version":3,"sources":["app/Theme.js","context/auth/AuthContext.js","auth/LoginDialog.js","auth/LoginButton.js","auth/LogoutButton.js","userMenu/UserMenu.js","context/chatty/ChattyContext.js","nav/RefreshButton.js","util/fetchJson.js","context/indicators/IndicatorContext.js","replyBox/ReplyBox.js","nav/NewThreadButton.js","nav/MessagesButton.js","context/filter/FilterContext.js","filter/FilterDialog.js","filter/FilterButton.js","nav/Nav.js","thread/PostExpirationBar.js","thread/PostDate.js","thread/PostAuthor.js","thread/supportedTags.js","thread/Tags.js","thread/TagButton.js","thread/Post.js","thread/OneLine.js","thread/Comments.js","thread/Thread.js","chatty/Chatty.js","app/App.js","context/indicators/withIndicators.js","context/auth/AuthProvider.js","context/chatty/ChattyProvider.js","context/auth/withAuth.js","context/indicators/AsyncLoadingIndicator.js","context/indicators/IndicatorProvider.js","context/filter/FilterProvider.js","history.js","app/Root.js","index.js"],"names":["createMuiTheme","palette","type","primary","light","main","dark","secondary","typography","useNextVariants","React","createContext","LoginDialog","_ref","open","onClose","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","login","useContext","AuthContext","submit","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","preventDefault","stop","this","_x","apply","arguments","react_default","createElement","Dialog_default","onSubmit","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","margin","label","fullWidth","onChange","target","value","DialogActions_default","Button_default","onClick","LoginButton","setOpen","Fragment","auth_LoginDialog","logout","MenuItem_default","UserMenu","_useContext","isLoggedIn","anchorEl","setAnchorEl","IconButton_default","Person_default","core_Menu_default","keepMounted","disabled","Divider_default","LogoutButton","auth_LoginButton","withStyles","badge","top","classes","ChattyContext","newThreads","refreshChatty","displayBadge","length","title","concat","Tooltip_default","disableFocusListener","enterDelay","Badge_default","badgeContent","color","Refresh_default","fetchJson","url","options","res","body","status","statusText","result","_args","undefined","objectSpread","headers","Content-Type","querystring","stringify","fetch","sent","ok","tryJson","abrupt","console","error","Promise","reject","_callee2","text","_context2","JSON","parse","t0","_x2","card","backgroundColor","borderRadius","border","actions","flexRow","display","flexDirection","textarea","flex","padding","_this","onCloseReplyBox","parentId","className","setLoading","IndicatorContext","setText","posting","setPosting","handleSubmit","state","method","props","log","finish","Card_default","classnames","CardHeader_default","CardContent_default","Input_default","multiline","disableUnderline","rows","placeholder","name","required","CardActions_default","variant","dialogPaper","width","Add_default","paper","replyBox_ReplyBox","totalMessagesCount","setTotalMessagesCount","unreadMessagesCount","setUnreadMessagesCount","getCounts","_ref3","total","unread","useEffect","id","setInterval","clearInterval","href","Message_default","content","FilterContext","filterSettings","updateFilterSettings","showCollapsed","setShowCollapsed","FormControlLabel_default","control","Checkbox_default","checked","FilterButton","Tooltip_Tooltip_default","IconButton_IconButton_default","FilterList_default","filter_FilterDialog","white","menuButton","marginLeft","marginRight","menuItem","textDecoration","drawerOpen","setDrawerOpen","closeDrawer","AppBar_default","elevation","Toolbar_default","Menu_default","Typography_default","filter_FilterButton","nav_NewThreadButton","nav_MessagesButton","nav_RefreshButton","userMenu_UserMenu","Drawer_default","drawer","position","drawerAppBar","wrapper","height","background","backgroundImage","backgroundSize","boxShadow","date","now","Date","getTime","then","percent","Math","min","style","fontSize","paddingTop","format","distanceInWordsToNow","employees","mods","user","fontWeight","cursor","&:hover","normal","self","op","mod","employee","_ref$post","post","_ref$thread","thread","_post$author","author","isSameUser","one","two","toLowerCase","replace","userClass","useMemo","find","nonBreakingAuthor","String","fromCharCode","supportedTags","containerPost","containerOneline","whiteSpace","chip","marginTop","nonChip","lolBorder","infBorder","unfBorder","wtfBorder","tagBorder","lol","inf","unf","wtf","tag","_ref$tags","tags","fixedTags","validTags","filter","includes","miscTagCount","reduce","acc","count","toConsumableArray","map","Chip_default","key","TagButton","postId","toUpperCase","handleTag","tagPost","match","warn","who","what","action","params","response","version","_x3","_x4","_x5","Label_default","marginBottom","replyBorder","replyBox","tagNws","borderLeft","tagInformative","tagFrontpage","maxWidth","header","toolbarButton","collapsed","onCollapse","onPinned","replyBoxOpenForId","onOpenReplyBox","isPostVisible","html","fixed","__html","tagClass","category","test","thread_PostAuthor","thread_Tags","lols","thread_PostDate","thread_PostExpirationBar","dangerouslySetInnerHTML","disableActionSpacing","Close_default","Reply_default","pinned","Star_default","StarBorder_default","thread_TagButton","rel","ExitToApp_default","container","separator","oneline","overflow","textOverflow","oneline10","oneline9","oneline8","oneline7","oneline6","oneline5","oneline4","oneline3","oneline2","oneline1","onExpandReply","lineClass","recentReplyNumber","input","i","len","char","output","slice","trim","getSnippet","Comments","_ref$parent","parent","onCollapseReply","expandedReplyId","posts","thread_Post","thread_OneLine","rawThread","setExpandedReplyId","setReplyBoxOpenForId","markThread","sort","b","reverse","forEach","index","threadId","handleOpenReplyBox","handleCloseReplyBox","thread_Comments","styles","chatty","font","Chatty","threads","thread_Thread","App","nav_Nav","Switch","Route","path","component","withIndicators","Child","Consumer","indicatorProps","assign","AuthProvider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isValid","localStorage","setItem","setState","removeItem","_this$loadStorage","loadStorage","storageValue","getItem","ex","contextValue","Provider","children","PureComponent","authProps","withAuth","updateThreads","window","scrollTo","_this$props","_args2","oldState","mounted","fullReload","oldProps","eventId","waitForEvent","freshThreads","freshMarkedPosts","includeNewThreads","getChatty","getMarkedPosts","markedPosts","markedPostsById","defineProperty","maxPostIdByThread","max","_callee5","promises","_context5","_ref6","_this2","all","encodeURIComponent","threadCount","lastEventId","newerEventId","events","_this3","handleEvent","eventType","eventData","addReply","updateCategory","updates","updatedPostsById","_ref9","updateTags","updated","debug","progress","zIndex","loading","LinearProgress_default","IndicatorProvider","toast","showToast","msg","indicators_AsyncLoadingIndicator","FilterProvider","showFilteredUsers","filteredUsers","showFilteredTerms","filteredTerms","_this$state","some","regex","settings","history","createHistory","Root","Component","Router","theme","Theme","indicators_IndicatorProvider","auth_AuthProvider","chatty_ChattyProvider","filter_FilterProvider","app_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cfab87e.chunk.js","sourcesContent":["import createMuiTheme from '@material-ui/core/styles/createMuiTheme'\n\nexport default createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#6fbf73',\n            main: '#357a38',\n            dark: '#357a38'\n        },\n        secondary: {\n            light: '#33eaff',\n            main: '#00e5ff',\n            dark: '#00a0b2'\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n})\n","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext, useState} from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction LoginDialog({open, onClose}) {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const {login} = useContext(AuthContext)\n\n    const submit = async event => {\n        event.preventDefault()\n\n        // TODO: Sync loading indicator\n        login(username, password)\n\n        setUsername('')\n        setPassword('')\n        onClose()\n    }\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <form onSubmit={submit}>\n                <DialogTitle>Log in</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        label='Username'\n                        type='text'\n                        fullWidth\n                        onChange={event => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        margin='dense'\n                        label='Password'\n                        type='password'\n                        fullWidth\n                        onChange={event => setPassword(event.target.value)}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose}>Cancel</Button>\n                    <Button type='submit'>Log in</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    )\n}\n\nexport default LoginDialog\n","import React, {useState} from 'react'\nimport Button from '@material-ui/core/Button'\nimport LoginDialog from './LoginDialog'\n\nfunction LoginButton() {\n    const [open, setOpen] = useState(false)\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen(true)}>Log in</Button>\n\n            <LoginDialog open={open} onClose={() => setOpen(false)}/>\n        </React.Fragment>\n    )\n}\n\nexport default LoginButton\n","import React, {useContext} from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction LoginButton({onClick}) {\n    const {logout} = useContext(AuthContext)\n    const handleClick = () => {\n        onClick && onClick()\n        logout()\n    }\n    return <MenuItem onClick={handleClick}>Logout</MenuItem>\n}\n\nexport default LoginButton\n","import React, {useContext, useState} from 'react'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport LoginButton from '../auth/LoginButton'\nimport LogoutButton from '../auth/LogoutButton'\nimport IconButton from '@material-ui/core/IconButton'\nimport Divider from '@material-ui/core/Divider'\nimport PersonIcon from '@material-ui/icons/Person'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction UserMenu() {\n    const {isLoggedIn, username} = useContext(AuthContext)\n    const [anchorEl, setAnchorEl] = useState(null)\n\n    if (!isLoggedIn) return <LoginButton/>\n    return (\n        <React.Fragment>\n            <IconButton onClick={event => setAnchorEl(event.target)}>\n                <PersonIcon/>\n            </IconButton>\n\n            {anchorEl && <Menu\n                keepMounted\n                open={!!anchorEl}\n                anchorEl={anchorEl}\n                onClose={() => setAnchorEl(null)}\n            >\n                <MenuItem disabled>{username}</MenuItem>\n                <Divider/>\n                <LogoutButton onClick={() => setAnchorEl(null)}/>\n            </Menu>}\n        </React.Fragment>\n    )\n}\n\nexport default UserMenu\n","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport Badge from '@material-ui/core/Badge'\nimport {withStyles} from '@material-ui/core/styles'\nimport ChattyContext from '../context/chatty/ChattyContext'\n\nfunction RefreshButton({classes}) {\n    const {newThreads, refreshChatty} = useContext(ChattyContext)\n    const displayBadge = newThreads && newThreads.length > 0\n    const title = displayBadge ? `Refresh Thread Order (${newThreads.length} new threads)` : 'Refresh Thread Order'\n\n    return (\n        <Tooltip disableFocusListener title={title} enterDelay={350}>\n            <IconButton onClick={refreshChatty}>\n                {\n                    displayBadge ?\n                        <Badge badgeContent={newThreads.length} color='secondary' classes={{badge: classes.badge}}>\n                            <RefreshIcon/>\n                        </Badge>\n                        : <RefreshIcon/>\n                }\n            </IconButton>\n        </Tooltip>\n    )\n}\n\nconst styles = {\n    badge: {\n        top: 12\n    }\n}\n\nexport default withStyles(styles)(RefreshButton)\n","import querystring from 'querystring'\n\nconst base = 'https://winchatty.com/v2'\n\nexport default async (url, options = {}) => {\n    if (options.body) {\n        options = {\n            ...options,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                ...options.headers\n            },\n            body: querystring.stringify(options.body)\n        }\n    }\n    let res = await fetch(`${base}/${url}`, options)\n    if (res.ok) {\n        return await tryJson(res)\n    } else {\n        let body = await tryJson(res)\n        let {status, statusText} = res\n        let result = {status, statusText, body}\n        console.error('Http Error:', result)\n        return Promise.reject(result)\n    }\n}\n\nconst tryJson = async res => {\n    let text = await res.text()\n    try {\n        return JSON.parse(text)\n    } catch (ex) {\n        return text\n    }\n}\n","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext, useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport {withStyles} from '@material-ui/core/styles'\nimport Input from '@material-ui/core/Input'\nimport fetchJson from '../util/fetchJson'\nimport classnames from 'classnames'\nimport AuthContext from '../context/auth/AuthContext'\nimport IndicatorContext from '../context/indicators/IndicatorContext'\n\nfunction ReplyBox({classes, onCloseReplyBox, parentId, className}) {\n    const {username, password} = useContext(AuthContext)\n    const {setLoading} = useContext(IndicatorContext)\n    const [text, setText] = useState('')\n    const [posting, setPosting] = useState(false)\n\n    const handleSubmit = async () => {\n        const {text} = this.state\n        try {\n            setLoading('async')\n            setPosting(true)\n            let response = await fetchJson('postComment', {method: 'POST', body: {username, password, parentId, text}})\n            if (response.result === 'success') {\n                this.props.onCloseReplyBox()\n                // TODO: toast user\n            }\n        } catch (ex) {\n            console.log('Error while posting comment', ex)\n            // TODO: toast user\n        } finally {\n            setPosting(true)\n            setLoading(false)\n        }\n    }\n\n    return (\n        <Card className={classnames(className, classes.card)}>\n            {parentId === 0 && <CardHeader title='New Thread'/>}\n            <CardContent>\n                <div className={classes.flexRow}>\n                    <Input\n                        multiline\n                        autoFocus\n                        disableUnderline\n                        rows={5}\n                        fullWidth\n                        className={classes.textarea}\n                        placeholder='Type something interesting...'\n                        name='replyBody'\n                        required\n                        onChange={event => setText(event.target.value)}\n                    />\n                </div>\n            </CardContent>\n            <CardActions className={classes.actions}>\n                <Button\n                    color='primary'\n                    variant='outlined'\n                    disabled={posting || !text.length}\n                    onClick={handleSubmit}\n                >Post\n                </Button>\n                <Button\n                    variant='outlined'\n                    disabled={posting}\n                    onClick={onCloseReplyBox}\n                >Cancel\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst styles = {\n    card: {\n        backgroundColor: '#202224',\n        borderRadius: 0,\n        border: '1px solid #656565'\n    },\n    actions: {\n        margin: '-8px 0 8px 8px'\n    },\n    flexRow: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    textarea: {\n        flex: 1,\n        backgroundColor: '#000',\n        padding: 4\n    }\n}\n\nexport default withStyles(styles)(ReplyBox)\n","import React, {useContext, useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddIcon from '../../node_modules/@material-ui/icons/Add'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Dialog from '@material-ui/core/Dialog'\nimport ReplyBox from '../replyBox/ReplyBox'\nimport {withStyles} from '@material-ui/core/styles'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction NewThreadButton({classes}) {\n    const {isLoggedIn} = useContext(AuthContext)\n    const [open, setOpen] = useState(false)\n    if (!isLoggedIn) return null\n\n    return (\n        <React.Fragment>\n            <Tooltip disableFocusListener title='New Thread' enterDelay={350}>\n                <IconButton onClick={() => setOpen(true)}>\n                    <AddIcon/>\n                </IconButton>\n            </Tooltip>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                classes={{paper: classes.dialogPaper}}\n            >\n                <ReplyBox\n                    parentId={0}\n                    onCloseReplyBox={() => setOpen(false)}\n                />\n            </Dialog>\n        </React.Fragment>\n    )\n}\n\nconst styles = {\n    dialogPaper: {\n        width: '85vw'\n    }\n}\n\nexport default withStyles(styles)(NewThreadButton)\n","import React, {useContext, useEffect, useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport MessageIcon from '@material-ui/icons/Message'\nimport Badge from '@material-ui/core/Badge'\nimport {withStyles} from '@material-ui/core/styles'\nimport fetchJson from '../util/fetchJson'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction MessagesButton({classes}) {\n    const {isLoggedIn, username, password} = useContext(AuthContext)\n\n    const [totalMessagesCount, setTotalMessagesCount] = useState(0)\n    const [unreadMessagesCount, setUnreadMessagesCount] = useState(0)\n\n    const displayBadge = unreadMessagesCount > 0\n    const title = `( ${unreadMessagesCount} / ${totalMessagesCount} ) unread messages`\n\n    const getCounts = async () => {\n        if (isLoggedIn) {\n            const options = {method: 'POST', body: {username, password}}\n            const {total, unread} = await fetchJson('getMessageCount', options)\n            setTotalMessagesCount(total)\n            setUnreadMessagesCount(unread)\n        }\n    }\n\n    // update counts every 15 minutes\n    useEffect(() => {\n        getCounts()\n\n        const id = setInterval(() => getCounts(), 15 * 60 * 1000)\n        return () => clearInterval(id)\n    }, [isLoggedIn])\n\n    if (!isLoggedIn) return null\n    return (\n        <Tooltip disableFocusListener title={title} enterDelay={350}>\n            <IconButton href='https://www.shacknews.com/messages' target='_blank'>\n                {\n                    displayBadge\n                        ? <Badge\n                            badgeContent={unreadMessagesCount}\n                            color='secondary'\n                            classes={{badge: classes.badge}}\n                        >\n                            <MessageIcon/>\n                        </Badge>\n                        : <MessageIcon/>\n                }\n            </IconButton>\n        </Tooltip>\n    )\n}\n\nconst styles = {\n    badge: {\n        top: 12\n    }\n}\n\nexport default withStyles(styles)(MessagesButton)\n","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext, useState} from 'react'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Dialog from '@material-ui/core/Dialog'\nimport Button from '@material-ui/core/Button'\nimport FilterContext from '../context/filter/FilterContext'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport {withStyles} from '@material-ui/core/styles'\n\nfunction FilterDialog({classes, open, onClose}) {\n    const {filterSettings, updateFilterSettings} = useContext(FilterContext)\n    const [showCollapsed, setShowCollapsed] = useState(filterSettings.showCollapsed)\n\n    const handleSave = () => {\n        onClose()\n        updateFilterSettings({\n            showCollapsed\n        })\n    }\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>Filter Threads/Posts</DialogTitle>\n            <DialogContent className={classes.content}>\n                <FormControlLabel\n                    label='Show Collapsed Threads'\n                    control={\n                        <Checkbox\n                            checked={showCollapsed}\n                            onChange={() => setShowCollapsed(!showCollapsed)}\n                            value='showCollapsed'\n                        />\n                    }\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>Cancel</Button>\n                <Button onClick={handleSave}>Save</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst styles = {\n    content: {\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}\n\nexport default withStyles(styles)(FilterDialog)\n","import React, {useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton/IconButton'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip'\nimport FilterDialog from './FilterDialog'\n\nfunction FilterButton() {\n    const [open, setOpen] = useState(false)\n    return (\n        <React.Fragment>\n            <Tooltip disableFocusListener title='Filter Threads/Posts' enterDelay={350}>\n                <IconButton onClick={() => setOpen(true)}>\n                    <FilterListIcon/>\n                </IconButton>\n            </Tooltip>\n\n            <FilterDialog open={open} onClose={() => setOpen(false)}/>\n        </React.Fragment>\n    )\n}\n\nexport default FilterButton\n","import React, {useState} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {withStyles} from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport UserMenu from '../userMenu/UserMenu'\nimport RefreshButton from './RefreshButton'\nimport NewThreadButton from './NewThreadButton'\nimport MessagesButton from './MessagesButton'\nimport FilterButton from '../filter/FilterButton'\nimport Drawer from '@material-ui/core/Drawer'\n\nfunction Nav({classes}) {\n    const [drawerOpen, setDrawerOpen] = useState(false)\n    const closeDrawer = () => setDrawerOpen(false)\n\n    return (\n        <React.Fragment>\n            <AppBar elevation={0}>\n                <Toolbar>\n                    <IconButton className={classes.menuButton} onClick={() => setDrawerOpen(!drawerOpen)}>\n                        <MenuIcon className={classes.white}/>\n                    </IconButton>\n\n                    <Typography variant=\"h5\" className={classes.title}>Chatty</Typography>\n\n                    <FilterButton/>\n                    <NewThreadButton/>\n                    <MessagesButton/>\n                    <RefreshButton/>\n                    <UserMenu/>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer open={drawerOpen} onClose={closeDrawer} className={classes.drawer}>\n                <AppBar position=\"static\" color=\"primary\" className={classes.drawerAppBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>Latest Chatty</Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <a href=\"https://github.com/latestchatty/chatty\" className={classes.menuItem}>\n                    <MenuItem onClick={closeDrawer}>Contribute</MenuItem>\n                </a>\n                <a href=\"https://github.com/latestchatty/chatty/issues\" className={classes.menuItem}>\n                    <MenuItem onClick={closeDrawer}>Feedback</MenuItem>\n                </a>\n            </Drawer>\n        </React.Fragment>\n    )\n}\n\nconst styles = {\n    white: {\n        color: '#fff'\n    },\n    title: {\n        color: '#fff',\n        flex: 1\n    },\n    menuButton: {\n        marginLeft: -15,\n        marginRight: 8\n    },\n    menuItem: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n}\n\nexport default withStyles(styles)(Nav)\n","import React from 'react'\nimport {withStyles} from '@material-ui/core/styles'\n\nfunction PostExpirationBar({classes, date}) {\n    const now = (new Date().getTime())\n    const then = new Date(date).getTime()\n    const percent = Math.min((((now - then) / 3600000) / 18) * 100, 100)\n\n    let backgroundColor = 'red'\n    if (percent <= 25) {\n        backgroundColor = 'springgreen'\n    } else if (percent <= 50) {\n        backgroundColor = 'yellow'\n    } else if (percent <= 75) {\n        backgroundColor = 'orange'\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <div\n                className={classes.value}\n                style={{width: `${percent}%`, backgroundColor}}\n            />\n        </div>\n    )\n}\n\nconst styles = {\n    wrapper: {\n        height: 8,\n        width: 48,\n        margin: 7,\n        background:\n            `rgb(221, 221, 221) -webkit-gradient(\n                linear,\n                0% 0%,\n                0% 100%,\n                from(rgb(170, 170, 170)),\n                color-stop(0.4, rgb(204, 204, 204)),\n                color-stop(0.6, rgb(204, 204, 204)),\n                to(rgb(238, 238, 238))\n            )`\n    },\n    value: {\n        height: 8,\n        backgroundImage:\n            `-webkit-gradient(\n                linear,\n                0 100%,\n                100% 0,\n                color-stop(0.25, rgba(255, 255, 255, 0.4)),\n                color-stop(0.25, transparent),\n                color-stop(0.5, transparent),\n                color-stop(0.5, rgba(255, 255, 255, 0.4)),\n                color-stop(0.75, rgba(255, 255, 255, 0.4)),\n                color-stop(0.75, transparent),\n                to(transparent)\n            )`,\n        backgroundSize: '25px 25px',\n        boxShadow: 'rgba(255, 255, 255, 0.298039) 0 2px 4px inset, rgba(0, 0, 0, 0.4) 0 -2px 3px inset'\n    }\n}\n\nexport default withStyles(styles)(PostExpirationBar)\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport format from 'date-fns/format'\nimport distanceInWordsToNow from 'date-fns/distance_in_words_to_now'\nimport {withStyles} from '@material-ui/core/styles'\n\nfunction PostDate({classes, date}) {\n    return (\n        <Tooltip disableFocusListener title={format(date, 'MMM DD, YYYY h:mma')} enterDelay={350}>\n            <div className={classes.date}>{distanceInWordsToNow(date)} ago</div>\n        </Tooltip>\n    )\n}\n\nconst styles = {\n    date: {\n        fontSize: 10,\n        color: '#888',\n        paddingTop: 3,\n        marginRight: 3\n    }\n}\n\nexport default withStyles(styles)(PostDate)\n","import React, {useContext, useMemo} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\nimport classnames from 'classnames'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction PostAuthor({classes, post = {}, thread = {}}) {\n    const {username} = useContext(AuthContext)\n    const {author = ''} = post\n\n    const isSameUser = (one = '', two = '') => {\n        const left = one.toLowerCase().replace(/\\s/g, '')\n        const right = two.toLowerCase().replace(/\\s/g, '')\n        return left === right\n    }\n\n    const userClass = useMemo(() => {\n        if (username && isSameUser(author, username)) return 'self'\n        else if (thread.id !== post.id && isSameUser(thread.author, author)) return 'op'\n        else if (employees.find(employee => isSameUser(employee, author))) return 'employee'\n        else if (mods.find(mod => isSameUser(mod, author))) return 'mod'\n        return 'normal'\n    }, [username, author, thread.id, post.id, thread.author])\n\n    // Don't let the browser line break in the middle of author name\n    const nonBreakingAuthor = useMemo(() => author.replace(/\\s/g, String.fromCharCode(160)), [author])\n\n    return (\n        <span className={classnames(classes.user, classes[userClass])}>\n            {nonBreakingAuthor}\n        </span>\n    )\n}\n\nconst employees = [\n    'themanwiththebriefcase',\n    'shacknews'\n]\nconst mods = []\n\nconst styles = {\n    user: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        '&:hover': {\n            textDecoration: 'underline'\n        }\n    },\n    normal: {\n        color: '#f3e7b5'\n    },\n    self: {\n        color: '#6cf'\n    },\n    op: {\n        color: '#6aff94'\n    },\n    mod: {\n        color: '#d20000'\n    },\n    employee: {\n        color: '#9370db'\n    }\n}\n\nexport default withStyles(styles)(PostAuthor)\n","export default ['lol', 'inf', 'unf', 'wtf']\n","import React, {useMemo} from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport {withStyles} from '@material-ui/core/styles'\nimport classnames from 'classnames'\nimport supportedTags from './supportedTags'\n\nfunction Tags({classes, tags = [], variant}) {\n    const fixedTags = useMemo(() => {\n        const validTags = tags.filter(tag => supportedTags.includes(tag.tag))\n        const miscTagCount = tags.filter(tag => !supportedTags.includes(tag.tag))\n            .reduce((acc, tag) => acc + tag.count, 0)\n        return [\n            ...validTags,\n            {tag: 'tag', count: miscTagCount}\n        ]\n    }, [tags])\n\n    return (\n        <div className={variant === 'post' ? classes.containerPost : classes.containerOneline}>\n            {fixedTags.map(tag => {\n                if (tag.count < 1) return null\n                else if (variant === 'post') {\n                    return (\n                        <Chip\n                            key={tag.tag}\n                            className={classnames(classes.chip, classes[tag.tag], classes[`${tag.tag}Border`])}\n                            label={`${tag.count} ${tag.tag}`}\n                            variant='outlined'\n                        />\n                    )\n                } else if (variant === 'oneline') {\n                    return (\n                        <span key={tag.tag} className={classnames(classes.nonChip, classes[tag.tag])}>\n                            {`${tag.count} ${tag.tag}`}\n                        </span>\n                    )\n                }\n                return null\n            })}\n        </div>\n    )\n}\n\nconst styles = {\n    containerPost: {\n        marginLeft: 12\n    },\n    containerOneline: {\n        marginLeft: 4,\n        whiteSpace: 'nowrap'\n    },\n    chip: {\n        height: 16,\n        marginTop: 2,\n        marginRight: 6,\n        fontSize: 10\n    },\n    nonChip: {\n        marginRight: 4,\n        fontSize: 9\n    },\n    lolBorder: {\n        border: '1px solid #f80'\n    },\n    infBorder: {\n        border: '1px solid #09c'\n    },\n    unfBorder: {\n        border: '1px solid #f00'\n    },\n    wtfBorder: {\n        border: '1px solid #c000c0'\n    },\n    tagBorder: {\n        border: '1px solid #bbaf57'\n    },\n    lol: {\n        color: '#f80'\n    },\n    inf: {\n        color: '#09c'\n    },\n    unf: {\n        color: '#f00'\n    },\n    wtf: {\n        color: '#c000c0'\n    },\n    tag: {\n        color: '#bbaf57'\n    }\n}\n\nexport default withStyles(styles)(Tags)\n","import React, {useContext, useState} from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport LabelIcon from '@material-ui/icons/Label'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport querystring from 'querystring'\nimport AuthContext from '../context/auth/AuthContext'\nimport supportedTags from './supportedTags'\nimport IndicatorContext from '../context/indicators/IndicatorContext'\n\nfunction TagButton({className, postId}) {\n    const {isLoggedIn, username} = useContext(AuthContext)\n    const {setLoading} = useContext(IndicatorContext)\n    const [anchorEl, setAnchorEl] = useState(null)\n\n    const tags = supportedTags.map(tag => tag.toUpperCase())\n\n    const handleTag = async tag => {\n        try {\n            setLoading('async')\n            setAnchorEl(null)\n\n            let text = await tagPost(username, postId, tag)\n            if (text.includes('already tagged')) {\n                text = await tagPost(username, postId, tag, 'untag')\n            }\n            if (!text.match(/^ok /)) {\n                console.warn('Error tagging post', text)\n            }\n            // TODO: toast user\n        } catch (err) {\n            console.error('Exception while tagging post', err)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    const tagPost = async (who, what, tag, action) => {\n        const base = 'https://www.lmnopc.com/greasemonkey/shacklol/report.php'\n        const params = querystring.stringify({who, what, tag, version: '-1'})\n        if (action) params.action = action\n        const response = await fetch(`${base}?${params}`)\n        return response.text()\n    }\n\n    if (!isLoggedIn) return null\n    return (\n        <React.Fragment>\n            <Tooltip disableFocusListener title='Tag Post' enterDelay={350}>\n                <LabelIcon className={className} onClick={event => setAnchorEl(event.target)}/>\n            </Tooltip>\n\n            {\n                anchorEl && <Menu\n                    keepMounted\n                    open={!!anchorEl}\n                    anchorEl={anchorEl}\n                    onClose={() => setAnchorEl(null)}\n                >\n                    {tags.map(tag => <MenuItem onClick={() => handleTag(tag)}>{tag}</MenuItem>)}\n                </Menu>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default TagButton\n","import React, {useContext, useMemo} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport CloseIcon from '@material-ui/icons/Close'\nimport StarIcon from '@material-ui/icons/Star'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport ReplyIcon from '@material-ui/icons/Reply'\nimport {withStyles} from '@material-ui/core/styles'\nimport PostExpirationBar from './PostExpirationBar'\nimport PostDate from './PostDate'\nimport PostAuthor from './PostAuthor'\nimport classnames from 'classnames'\nimport ReplyBox from '../replyBox/ReplyBox'\nimport Tags from './Tags'\nimport TagButton from './TagButton'\nimport AuthContext from '../context/auth/AuthContext'\nimport FilterContext from '../context/filter/FilterContext'\n\nfunction Post({classes, post, thread, onCollapse, onPinned, replyBoxOpenForId, onOpenReplyBox, onCloseReplyBox}) {\n    const {isLoggedIn} = useContext(AuthContext)\n    const {isPostVisible} = useContext(FilterContext)\n\n    const html = useMemo(() => {\n        let fixed = post.body\n        if (post.author === 'Shacknews') {\n            fixed = post.body.replace('href=\"/', 'href=\"https://www.shacknews.com/')\n        }\n        return {__html: fixed}\n    }, [post.body])\n\n    const tagClass = useMemo(() => {\n        if (post.category === 'nuked') {\n            return null\n        } else if (post.category === 'nws') {\n            return 'tagNws'\n        } else if (post.category === 'informative') {\n            return 'tagInformative'\n        } else if (/shacknews/i.test(post.author)) {\n            return 'tagFrontpage'\n        }\n        return null\n    }, [post.category, post.author])\n\n    const replyBorder = post.parentId > 0 ? 'replyBorder' : null\n\n    const handleReplyClick = () => onOpenReplyBox(post.id)\n\n    if (!isPostVisible(thread, post)) return null\n    return (\n        <React.Fragment>\n            <Card className={classnames(classes.card, classes[tagClass], classes[replyBorder])}>\n                <div className={classes.header}>\n                    <PostAuthor post={post} thread={thread}/>\n\n                    <Tags tags={post.lols} variant='post'/>\n\n                    <span className={classes.flex}/>\n\n                    <PostDate date={post.date}/>\n\n                    {post.parentId === 0 && <PostExpirationBar date={post.date}/>}\n                </div>\n\n                <CardContent className={classnames('postbody', classes.content)}>\n                    <span dangerouslySetInnerHTML={html}/>\n                </CardContent>\n\n                <CardActions className={classes.actions} disableActionSpacing>\n                    <Tooltip\n                        disableFocusListener\n                        title={post.collapsed ? 'Uncollapse' : 'Collapse'}\n                        enterDelay={350}\n                    >\n                        <CloseIcon\n                            className={\n                                classnames(classes.toolbarButton, post.collapsed ? classes.collapsed : null)\n                            }\n                            onClick={onCollapse}\n                        />\n                    </Tooltip>\n\n                    {\n                        isLoggedIn &&\n                        <Tooltip disableFocusListener title='Reply' enterDelay={350}>\n                            <ReplyIcon className={classes.toolbarButton} onClick={handleReplyClick}/>\n                        </Tooltip>\n                    }\n\n                    {\n                        isLoggedIn && post.parentId === 0 &&\n                        <React.Fragment>\n                            {\n                                post.pinned &&\n                                <Tooltip disableFocusListener title='Unpin Thread' enterDelay={350}>\n                                    <StarIcon className={classes.toolbarButton} onClick={onPinned}/>\n                                </Tooltip>\n                            }\n                            {\n                                !post.pinned &&\n                                <Tooltip disableFocusListener title='Pin Thread' enterDelay={350}>\n                                    <StarBorderIcon className={classes.toolbarButton} onClick={onPinned}/>\n                                </Tooltip>\n                            }\n                        </React.Fragment>\n                    }\n\n                    <TagButton postId={post.id} className={classes.toolbarButton}/>\n\n                    <Tooltip disableFocusListener title='View Post @ Shacknews.com' enterDelay={350}>\n                        <a\n                            className={classes.toolbarButton}\n                            target='_blank'\n                            rel=\"noopener noreferrer\"\n                            href={`http://www.shacknews.com/chatty?id=${post.id}#item_${post.id}`}\n                        >\n                            <ExitToAppIcon className={classes.toolbarButton}/>\n                        </a>\n                    </Tooltip>\n                </CardActions>\n            </Card>\n\n            {\n                replyBoxOpenForId === post.id &&\n                <ReplyBox parentId={post.id} onCloseReplyBox={onCloseReplyBox} className={classes.replyBox}/>}\n        </React.Fragment>\n    )\n}\n\nconst styles = {\n    card: {\n        backgroundColor: '#202224',\n        borderRadius: 0,\n        marginBottom: 3\n    },\n    replyBorder: {\n        border: '1px solid #656565'\n    },\n    replyBox: {\n        marginTop: -3\n    },\n    tagNws: {\n        borderLeft: '3px solid red !important'\n    },\n    tagInformative: {\n        borderLeft: '3px solid #00bff3 !important'\n    },\n    tagFrontpage: {\n        borderLeft: '3px solid mediumpurple !important'\n    },\n    content: {\n        maxWidth: 'calc(100vw - 32)',\n        color: 'lightgray',\n        fontSize: 13,\n        padding: '8px 16px'\n    },\n    header: {\n        backgroundColor: '#373a3c',\n        padding: '3px 3px 3px 16px',\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    actions: {\n        height: 34\n    },\n    flex: {\n        flex: 1\n    },\n    toolbarButton: {\n        width: 18,\n        height: 18,\n        cursor: 'pointer',\n        color: '#fff',\n        marginRight: 6\n    },\n    collapsed: {\n        color: '#f00'\n    }\n}\n\nexport default withStyles(styles)(Post)\n","import React, {useMemo} from 'react'\nimport PostAuthor from './PostAuthor'\nimport {withStyles} from '@material-ui/core/styles'\nimport classnames from 'classnames'\nimport Tags from './Tags'\n\nfunction OneLine({classes, post, thread, onExpandReply}) {\n    const getSnippet = body => {\n        const input = body.replace(/(<(?!span)(?!\\/span)[^>]+>| tabindex=\"1\")/gm, ' ')\n        const maxLength = 106\n\n        let i = 0\n        let len = 0\n        let tag = false\n        let char = false\n        while (i < input.length && len < maxLength) {\n            if (input[i] === '<') {\n                tag = true\n            } else if (input[i] === '>') {\n                tag = false\n            } else if (input[i] === '&') {\n                char = true\n            } else if (input[i] === '' && char) {\n                char = false\n                len++\n            } else if (!tag) {\n                len++\n            }\n\n            i++\n        }\n\n        let output = input.slice(0, i).trim()\n        if (i < input.length || !output) {\n            output += '...'\n        }\n\n        return output\n    }\n\n    const lineClass = `oneline${post.recentReplyNumber || 9}`\n    const oneline = useMemo(() => getSnippet(post.body), [post.body])\n\n    return (\n        <div className={classes.container}>\n                <span\n                    className={classnames(classes.oneline, classes[lineClass])}\n                    dangerouslySetInnerHTML={{__html: oneline}}\n                    onClick={() => onExpandReply(post.id)}\n                />\n            <Tags tags={post.lols} variant='oneline'/>\n            <PostAuthor post={post} thread={thread}/>\n        </div>\n    )\n}\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    separator: {\n        padding: '0 3px',\n        fontSize: 11,\n        color: '#fff'\n    },\n    oneline: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        '&:hover': {\n            color: '#fff',\n            backgroundColor: '#233548',\n            cursor: 'pointer'\n        }\n    },\n    oneline10: {\n        color: '#777'\n    },\n    oneline9: {\n        color: '#888'\n    },\n    oneline8: {\n        color: '#999'\n    },\n    oneline7: {\n        color: '#aaa'\n    },\n    oneline6: {\n        color: '#bbb'\n    },\n    oneline5: {\n        color: '#ccc'\n    },\n    oneline4: {\n        color: '#ddd'\n    },\n    oneline3: {\n        color: '#eee'\n    },\n    oneline2: {\n        color: '#fff'\n    },\n    oneline1: {\n        color: '#eee',\n        fontWeight: 'bold'\n    }\n}\n\nexport default withStyles(styles)(OneLine)\n","import React, {useContext} from 'react'\nimport Post from './Post'\nimport OneLine from './OneLine'\nimport FilterContext from '../context/filter/FilterContext'\n\nfunction Comments({thread = {}, parent = thread, onCollapseReply, onExpandReply, onOpenReplyBox, expandedReplyId, replyBoxOpenForId, onCloseReplyBox}) {\n    const {isPostVisible} = useContext(FilterContext)\n    return (\n        <ul className='comments'>\n            {\n                thread.posts\n                    .filter(post => post.parentId === parent.id)\n                    .filter(post => isPostVisible(thread, post))\n                    .map(post =>\n                        <li key={post.id}>\n                            {\n                                expandedReplyId === post.id\n                                    ? <Post\n                                        post={post}\n                                        thread={thread}\n                                        onCollapse={onCollapseReply}\n                                        replyBoxOpenForId={replyBoxOpenForId}\n                                        onOpenReplyBox={onOpenReplyBox}\n                                        onCloseReplyBox={onCloseReplyBox}\n                                    />\n                                    : <OneLine\n                                        post={post}\n                                        thread={thread}\n                                        onExpandReply={onExpandReply}\n                                    />\n                            }\n                            <Comments\n                                thread={thread}\n                                parent={post}\n                                expandedReplyId={expandedReplyId}\n                                replyBoxOpenForId={replyBoxOpenForId}\n                                onExpandReply={onExpandReply}\n                                onCollapseReply={onCollapseReply}\n                                onOpenReplyBox={onOpenReplyBox}\n                                onCloseReplyBox={onCloseReplyBox}\n                            />\n                        </li>\n                    )\n            }\n        </ul>\n    )\n}\n\nexport default Comments\n","import React, {useContext, useMemo, useState} from 'react'\nimport Post from './Post'\nimport Comments from './Comments'\nimport {withStyles} from '@material-ui/core/styles'\nimport ChattyContext from '../context/chatty/ChattyContext'\nimport FilterContext from '../context/filter/FilterContext'\n\nfunction Thread({classes, thread: rawThread}) {\n    const [expandedReplyId, setExpandedReplyId] = useState(null)\n    const [replyBoxOpenForId, setReplyBoxOpenForId] = useState(null)\n    const {markThread} = useContext(ChattyContext)\n    const {isPostVisible} = useContext(FilterContext)\n    const thread = useMemo(() => {\n        const posts = rawThread.posts ? rawThread.posts.sort((a, b) => a.id - b.id) : []\n\n        // oneline highlights\n        posts.slice(-10)\n            .reverse()\n            .forEach((post, index) => post.recentReplyNumber = index + 1)\n\n        const [post] = posts\n        return {\n            ...rawThread,\n            ...post,\n            id: +rawThread.threadId,\n            posts: posts\n        }\n    }, [rawThread])\n    if (!isPostVisible(rawThread)) return null\n\n    const handleExpandReply = expandedReplyId => {\n        setExpandedReplyId(expandedReplyId)\n        setReplyBoxOpenForId(null)\n    }\n    const handleCollapseReply = () => {\n        setExpandedReplyId(null)\n        setReplyBoxOpenForId(null)\n    }\n    const handleOpenReplyBox = id => setReplyBoxOpenForId(id)\n    const handleCloseReplyBox = () => setReplyBoxOpenForId(null)\n\n    const handleCollapse = () => markThread(thread.threadId, thread.collapsed ? 'unmarked' : 'collapsed')\n    const togglePinned = () => markThread(thread.threadId, thread.pinned ? 'unmarked' : 'pinned')\n\n    return (\n        <div className={classes.thread}>\n            <Post\n                post={thread}\n                thread={thread}\n                replyBoxOpenForId={replyBoxOpenForId}\n                onCollapse={handleCollapse}\n                onOpenReplyBox={handleOpenReplyBox}\n                onCloseReplyBox={handleCloseReplyBox}\n                onPinned={togglePinned}\n            />\n\n            <Comments\n                thread={thread}\n                expandedReplyId={expandedReplyId}\n                replyBoxOpenForId={replyBoxOpenForId}\n                onExpandReply={handleExpandReply}\n                onCollapseReply={handleCollapseReply}\n                onOpenReplyBox={handleOpenReplyBox}\n                onCloseReplyBox={handleCloseReplyBox}\n            />\n        </div>\n    )\n}\n\nconst styles = {\n    thread: {\n        marginBottom: 15\n    }\n}\n\nexport default withStyles(styles)(Thread)\n","import React, {useContext} from 'react'\nimport Thread from '../thread/Thread'\nimport ChattyContext from '../context/chatty/ChattyContext'\n\nfunction Chatty() {\n    const {threads} = useContext(ChattyContext)\n    return (\n        <div style={styles.chatty}>\n            {threads.map(thread => <Thread key={thread.threadId} thread={thread}/>)}\n        </div>\n    )\n}\n\nconst styles = {\n    chatty: {\n        margin: '72px 8px 8px 8px',\n        font: '12px/1.5 arial, helvetica, clean, sans-serif'\n    }\n}\n\nexport default Chatty\n","import React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport Nav from '../nav/Nav'\nimport Chatty from '../chatty/Chatty'\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Nav/>\n            <Switch>\n                <Route path=\"/chatty\" component={Chatty}/>\n\n                <Route component={Chatty}/>\n            </Switch>\n        </React.Fragment>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport IndicatorContext from './IndicatorContext'\n\nconst withIndicators = Child => props =>\n    <IndicatorContext.Consumer>\n        {indicatorProps => <Child {...props} {...indicatorProps}/>}\n    </IndicatorContext.Consumer>\n\nexport default withIndicators\n","import React from 'react'\nimport AuthContext from './AuthContext'\nimport fetchJson from '../../util/fetchJson'\nimport withIndicators from '../indicators/withIndicators'\n\nclass AuthProvider extends React.PureComponent {\n    constructor(props) {\n        super(props)\n\n        const {username, password} = this.loadStorage()\n        this.state = {\n            isLoggedIn: (username && password),\n            username, password\n        }\n    }\n\n    loadStorage() {\n        try {\n            const storageValue = localStorage.getItem('auth') || '{}'\n            return JSON.parse(storageValue) || {}\n        } catch (ex) {\n            console.log('Invalid storage value: auth', ex)\n        }\n    }\n\n    login = async (username, password) => {\n        const {setLoading} = this.props\n        try {\n            setLoading('async')\n\n            const result = await fetchJson(`verifyCredentials`, {method: 'POST', body: {username, password}})\n\n            if (result.isValid) {\n                localStorage.setItem('auth', JSON.stringify({username, password}))\n                this.setState({isLoggedIn: true, username, password})\n            } else {\n                console.log('Invalid login credentials.')\n                // TODO: toast user\n            }\n        } catch (ex) {\n            console.log('Error while logging in', ex)\n            // TODO: toast user\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    logout = () => {\n        localStorage.removeItem('auth')\n        this.setState({isLoggedIn: false, username: null, password: null})\n    }\n\n    render() {\n        const contextValue = {\n            ...this.state,\n\n            login: this.login,\n            logout: this.logout\n        }\n\n        return (\n            <AuthContext.Provider value={contextValue}>\n                {this.props.children}\n            </AuthContext.Provider>\n        )\n    }\n}\n\nexport default withIndicators(AuthProvider)\n","import React from 'react'\nimport ChattyContext from './ChattyContext'\nimport fetchJson from '../../util/fetchJson'\nimport withIndicators from '../indicators/withIndicators'\nimport withAuth from '../auth/withAuth'\n\nclass ChattyProvider extends React.PureComponent {\n    state = {\n        threads: [],\n        newThreads: []\n    }\n\n    componentDidMount() {\n        this.mounted = true\n        return this.fullReload()\n    }\n\n    async componentDidUpdate(oldProps) {\n        if (oldProps.isLoggedIn !== this.props.isLoggedIn) {\n            this.updateThreads(false, true, true)\n        }\n    }\n\n    componentWillUnmount() {\n        this.mounted = false\n    }\n\n    async fullReload() {\n        const {setLoading} = this.props\n        try {\n            setLoading('async')\n\n            const {eventId} = await fetchJson('getNewestEventId')\n            await this.updateThreads(true, true, false)\n\n            this.waitForEvent(eventId)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    async updateThreads(freshThreads = false, freshMarkedPosts = false, includeNewThreads = false) {\n        // fresh chatty load from server\n        let {threads} = freshThreads ? await this.getChatty() : {}\n\n        // process marked posts if needed\n        let markedPosts\n        if (freshMarkedPosts) markedPosts = await this.getMarkedPosts(freshMarkedPosts)\n\n        // compile new thread state\n        let maxPostIdByThread\n        this.setState(oldState => {\n            threads = (threads || oldState.threads)\n\n            // only add in new threads when needed\n            threads = includeNewThreads ? oldState.newThreads.concat(threads) : threads\n            let newThreads = includeNewThreads ? [] : oldState.newThreads\n\n            // if we're loading marked posts, process the data\n            if (markedPosts) {\n                const markedPostsById = markedPosts\n                    .reduce((acc, post) => ({\n                        ...acc,\n                        [post.id]: post.type\n                    }), {})\n\n                // update post markings\n                threads = threads\n                    .map(thread => ({\n                        ...thread,\n                        pinned: markedPostsById[thread.threadId] === 'pinned',\n                        collapsed: markedPostsById[thread.threadId] === 'collapsed'\n                    }))\n            }\n\n            // order by recent activity\n            maxPostIdByThread = threads\n                .reduce((acc, thread) => {\n                    acc[thread.threadId] = thread.posts.reduce((acc, post) => Math.max(post.id, acc), 0)\n                    return acc\n                }, {})\n\n            // TODO: remove expired threads\n\n            // sort by activity, pinned first\n            threads = threads\n                .sort((a, b) => maxPostIdByThread[b.threadId] - maxPostIdByThread[a.threadId])\n                .sort((a, b) => b.pinned - a.pinned)\n\n            return {threads, newThreads}\n        }, async () => {\n            if (markedPosts) {\n                // clean up any old collapsed posts after loading, doesn't impact state\n                let promises = markedPosts\n                    .filter(post => !maxPostIdByThread[post.id])\n                    .map(({id}) => this.markThread(id, 'unmarked', false))\n                await Promise.all(promises)\n            }\n        })\n    }\n\n    async getMarkedPosts() {\n        const {isLoggedIn, username} = this.props\n        if (isLoggedIn) {\n            const {markedPosts} = await fetchJson(`clientData/getMarkedPosts?username=${encodeURIComponent(username)}`)\n            return markedPosts\n        }\n        return []\n    }\n\n    async getChatty(threadCount) {\n        return await fetchJson(`getChatty${threadCount > 0 ? `?count=${threadCount}` : ''}`)\n    }\n\n    async waitForEvent(lastEventId) {\n        if (this.mounted) {\n            const {lastEventId: newerEventId, events, error} = await fetchJson(`waitForEvent?lastEventId=${lastEventId}`)\n\n            if (this.mounted) {\n                if (!error) {\n                    events.forEach(event => this.handleEvent(event))\n\n                    return this.waitForEvent(newerEventId)\n                } else {\n                    // TODO: handle eventing error\n                    console.log('Error from API:waitForLastEvent call.', error)\n                }\n            }\n        }\n    }\n\n    async handleEvent(event = {}) {\n        const {eventType, eventData} = event\n\n        if (eventType === 'newPost') {\n            const {post} = eventData\n            if (post.parentId) {\n                const threadId = `${post.threadId}`\n                const addReply = thread => {\n                    if (thread.threadId === threadId) {\n                        return {\n                            ...thread,\n                            posts: [\n                                ...thread.posts,\n                                post\n                            ]\n                        }\n                    }\n                    return thread\n                }\n                this.setState(oldState => ({\n                    threads: oldState.threads.map(addReply),\n                    newThreads: oldState.newThreads.map(addReply)\n                }))\n            } else {\n                this.setState(oldState => ({\n                    newThreads: [\n                        ...oldState.newThreads,\n                        {\n                            threadId: `${post.id}`,\n                            posts: [\n                                post\n                            ]\n                        }\n                    ]\n                }))\n            }\n        } else if (eventType === 'categoryChange') {\n            const {postId, category} = eventData\n            const updateCategory = thread => {\n                const threadContainsUpdate = thread.posts.find(post => post.id === postId)\n                if (threadContainsUpdate) {\n                    const posts = thread.posts\n                        .map(post => {\n                            if (post.id === postId) {\n                                return {...post, category}\n                            }\n                            return post\n                        })\n                    return {...thread, posts}\n                }\n                return thread\n            }\n\n            this.setState(oldState => ({\n                threads: oldState.threads.map(updateCategory),\n                newThreads: oldState.newThreads.map(updateCategory)\n            }))\n        } else if (eventType === 'lolCountsUpdate') {\n            const {updates} = eventData\n            const updatedPostsById = updates\n                .reduce(((acc, {postId, tag, count}) => ({\n                    ...acc,\n                    [postId]: {tag, count}\n                })), {})\n            const updateTags = thread => {\n                const threadContainsUpdate = thread.posts.find(post => updatedPostsById[post.id])\n                if (threadContainsUpdate) {\n                    const posts = thread.posts\n                        .map(post => {\n                            const updated = updatedPostsById[post.id]\n                            if (updated) {\n                                const lols = (post.lols || [])\n                                    .filter(tag => tag.tag !== updated.tag)\n                                    .concat([updated])\n                                return {...post, lols}\n                            }\n                            return post\n                        })\n                    return {...thread, posts}\n                }\n                return thread\n            }\n\n            this.setState(oldState => ({\n                threads: oldState.threads.map(updateTags),\n                newThreads: oldState.newThreads.map(updateTags)\n            }))\n        } else {\n            console.debug('Unhandled event type:', event)\n        }\n    }\n\n    refreshChatty = async () => {\n        await this.updateThreads(false, false, true)\n        window.scrollTo(0, 0)\n    }\n\n    markThread = async (postId, type, updateThreads = true) => {\n        const {isLoggedIn, username} = this.props\n\n        if (isLoggedIn) {\n            await fetchJson('clientData/markPost', {\n                method: 'POST',\n                body: {username, postId, type}\n            })\n        }\n\n        if (updateThreads) {\n            this.setState(oldState => {\n                const threadId = `${postId}`\n                return {\n                    threads: oldState.threads\n                        .map(thread => {\n                            if (thread.threadId === threadId) {\n                                return {\n                                    ...thread,\n                                    pinned: type === 'pinned',\n                                    collapsed: type === 'collapsed'\n                                }\n                            }\n                            return thread\n                        })\n                }\n            })\n        }\n    }\n\n    render() {\n        const contextValue = {\n            ...this.state,\n            refreshChatty: this.refreshChatty,\n            markThread: this.markThread\n        }\n\n        return (\n            <ChattyContext.Provider value={contextValue}>\n                {this.props.children}\n            </ChattyContext.Provider>\n        )\n    }\n}\n\nexport default withIndicators(\n    withAuth(\n        ChattyProvider\n    )\n)\n","import React from 'react'\nimport AuthContext from './AuthContext'\n\nconst withAuth = Child => props =>\n    <AuthContext.Consumer>\n        {authProps => <Child {...props} {...authProps}/>}\n    </AuthContext.Consumer>\n\nexport default withAuth\n","import React from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport {withStyles} from '@material-ui/core/styles'\n\nfunction AsyncLoadingIndicator({classes, loading}) {\n    if (loading !== 'async') return null\n    return <LinearProgress className={classes.progress} color='secondary'/>\n}\n\nconst styles = {\n    progress: {\n        zIndex: 9999,\n        position: 'fixed',\n        top: 0,\n        width: '100vw'\n    }\n}\n\nexport default withStyles(styles)(AsyncLoadingIndicator)\n","import React from 'react'\nimport IndicatorContext from './IndicatorContext'\nimport AsyncLoadingIndicator from './AsyncLoadingIndicator'\n\nclass IndicatorProvider extends React.PureComponent {\n    state = {\n        loading: false,\n        toast: false\n    }\n\n    setLoading = loading => this.setState({loading})\n\n    showToast = msg => {\n        // TODO: hook to toasts and replace other TODOs\n    }\n\n    render() {\n        const {loading} = this.state\n\n        const contextValue = {\n            setLoading: this.setLoading,\n            showToast: this.showToast\n        }\n\n        return (\n            <IndicatorContext.Provider value={contextValue}>\n                <AsyncLoadingIndicator loading={loading}/>\n                {this.props.children}\n            </IndicatorContext.Provider>\n        )\n    }\n}\n\nexport default IndicatorProvider\n","import React from 'react'\nimport FilterContext from './FilterContext'\n\nclass FilterProvider extends React.PureComponent {\n    state = {\n        showCollapsed: false,\n        showFilteredUsers: false,\n        filteredUsers: [],\n        showFilteredTerms: false,\n        filteredTerms: []\n    }\n\n    isPostVisible(thread, post = thread) {\n        const {\n            showCollapsed,\n            showFilteredUsers, filteredUsers,\n            showFilteredTerms, filteredTerms\n        } = this.state\n\n        if (!showCollapsed && thread.collapsed) return false\n        else if (!showFilteredUsers && filteredUsers.some(({regex}) => regex.test(post.author))) return false\n        else if (!showFilteredTerms && filteredTerms.some(({regex}) => regex.test(post.body))) return false\n\n        return true\n    }\n\n    render() {\n        const contextValue = {\n            filterSettings: {...this.state},\n            updateFilterSettings: settings => this.setState({...settings}),\n            isPostVisible: (thread, post) => this.isPostVisible(thread, post)\n        }\n\n        return (\n            <FilterContext.Provider value={contextValue}>\n                {this.props.children}\n            </FilterContext.Provider>\n        )\n    }\n}\n\nexport default FilterProvider\n","import createHistory from 'history/createBrowserHistory'\nconst history = createHistory({})\nexport default history\n","import React from 'react'\nimport {MuiThemeProvider} from '@material-ui/core/styles'\nimport Theme from './Theme'\nimport App from './App'\nimport AuthProvider from '../context/auth/AuthProvider'\nimport ChattyProvider from '../context/chatty/ChattyProvider'\nimport './global.css'\nimport './shacktags.css'\nimport './comment_tree.css'\nimport IndicatorProvider from '../context/indicators/IndicatorProvider'\nimport FilterProvider from '../context/filter/FilterProvider'\nimport {Router} from 'react-router-dom'\nimport history from '../history'\n\nfunction Root() {\n    return (\n        <Router history={history}>\n            <MuiThemeProvider theme={Theme}>\n                <IndicatorProvider>\n                    <AuthProvider>\n                        <ChattyProvider>\n                            <FilterProvider>\n                                <App/>\n                            </FilterProvider>\n                        </ChattyProvider>\n                    </AuthProvider>\n                </IndicatorProvider>\n            </MuiThemeProvider>\n        </Router>\n    )\n}\n\nexport default Root\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './app/Root'\n\nconst render = Component => ReactDOM.render(<Component/>, document.getElementById('root'))\n\nrender(Root)\n\nif (module.hot) {\n    module.hot.accept('./app/Root', () => {\n        const next = require('./app/Root').default\n        render(next)\n    })\n}\n"],"sourceRoot":""}