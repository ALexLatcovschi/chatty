{"version":3,"sources":["installStyle.js","app/Theme.js","context/auth/AuthContext.js","context/indicators/IndicatorContext.js","auth/LoginDialog.js","auth/LoginButton.js","auth/LogoutButton.js","userMenu/UserMenu.js","context/chatty/ChattyContext.js","nav/RefreshButton.js","util/fetchJson.js","replyBox/ReplyBox.js","nav/NewThreadButton.js","nav/MessagesButton.js","context/filter/FilterContext.js","filter/FilterDialog.js","filter/FilterButton.js","nav/Nav.js","thread/PostExpirationBar.js","thread/PostDate.js","thread/PostAuthor.js","thread/supportedTags.js","thread/Tags.js","thread/TagButton.js","thread/Post.js","thread/OneLine.js","thread/Comments.js","thread/Thread.js","chatty/Chatty.js","app/App.js","context/auth/AuthProvider.js","context/chatty/ChattyProvider.js","context/indicators/AsyncLoadingIndicator.js","context/indicators/SyncLoadingIndicator.js","context/indicators/Snackbars.js","context/indicators/IndicatorProvider.js","context/filter/FilterProvider.js","history.js","app/Root.js","index.js"],"names":["install","createMuiTheme","palette","type","primary","light","main","dark","secondary","typography","useNextVariants","React","createContext","LoginDialog","_ref","open","onClose","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","login","useContext","AuthContext","setLoading","IndicatorContext","submit","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","preventDefault","finish","stop","this","_x","apply","arguments","react_default","createElement","Dialog_default","onSubmit","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","margin","label","fullWidth","onChange","target","value","DialogActions_default","Button_default","onClick","LoginButton","setOpen","Fragment","auth_LoginDialog","logout","MenuItem_default","UserMenu","_useContext","isLoggedIn","anchorEl","setAnchorEl","IconButton_default","Person_default","core_Menu_default","keepMounted","disabled","Divider_default","LogoutButton","auth_LoginButton","useStyles","makeStyles","badge","top","RefreshButton","classes","ChattyContext","newThreads","refreshChatty","displayBadge","length","title","concat","Tooltip_default","disableFocusListener","enterDelay","Badge_default","badgeContent","color","Refresh_default","fetchJson","url","options","res","body","status","statusText","result","_args","undefined","objectSpread","headers","Content-Type","querystring","stringify","fetch","sent","ok","tryJson","abrupt","console","error","Promise","reject","_callee2","text","_context2","JSON","parse","t0","_x2","card","backgroundColor","borderRadius","border","actions","flexRow","display","flexDirection","textarea","flex","padding","ReplyBox","onCloseReplyBox","parentId","className","_useContext2","showSnackbar","setText","posting","setPosting","handleSubmit","method","log","Card_default","classnames","CardHeader_default","CardContent_default","Input_default","multiline","disableUnderline","rows","placeholder","name","required","CardActions_default","variant","dialogPaper","width","NewThreadButton","Add_default","paper","replyBox_ReplyBox","MessagesButton","totalMessagesCount","setTotalMessagesCount","unreadMessagesCount","setUnreadMessagesCount","getCounts","total","unread","useEffect","id","setInterval","clearInterval","href","Message_default","content","FilterDialog","FilterContext","filterSettings","updateFilterSettings","showCollapsed","setShowCollapsed","FormControlLabel_default","control","Checkbox_default","checked","FilterButton","Tooltip_Tooltip_default","IconButton_IconButton_default","FilterList_default","filter_FilterDialog","white","menuButton","marginLeft","marginRight","menuItem","textDecoration","Nav","drawerOpen","setDrawerOpen","closeDrawer","AppBar_default","elevation","Toolbar_default","Menu_default","Typography_default","filter_FilterButton","nav_NewThreadButton","nav_MessagesButton","nav_RefreshButton","userMenu_UserMenu","Drawer_default","drawer","position","drawerAppBar","rel","wrapper","height","background","backgroundImage","backgroundSize","boxShadow","PostExpirationBar","date","now","Date","getTime","then","percent","Math","min","style","fontSize","paddingTop","PostDate","format","distanceInWordsToNow","employees","mods","user","fontWeight","cursor","&:hover","normal","self","op","mod","employee","PostAuthor","_ref$post","post","_ref$thread","thread","_post$author","author","isSameUser","one","two","toLowerCase","replace","userClass","useMemo","find","nonBreakingAuthor","String","fromCharCode","supportedTags","containerPost","containerOneline","whiteSpace","chip","marginTop","nonChip","lolBorder","infBorder","unfBorder","wtfBorder","tagBorder","lol","inf","unf","wtf","tag","Tags","_ref$tags","tags","fixedTags","validTags","filter","includes","miscTagCount","reduce","acc","count","toConsumableArray","map","Chip_default","key","TagButton","postId","toUpperCase","handleTag","tagPost","match","warn","_ref3","who","what","action","params","response","version","_x3","_x4","_x5","Label_default","marginBottom","replyBorder","replyBox","tagNws","borderLeft","tagInformative","tagFrontpage","maxWidth","header","toolbarButton","collapsed","pinned","Post","onCollapse","onPinned","replyBoxOpenForId","onOpenReplyBox","domElement","useRef","isPostVisible","html","fixed","__html","tagClass","category","test","isReply","rect","current","getBoundingClientRect","viewHeight","max","document","documentElement","clientHeight","window","innerHeight","above","bottom","below","scrollTo","left","offsetTop","behavior","ref","thread_PostAuthor","thread_Tags","lols","thread_PostDate","thread_PostExpirationBar","dangerouslySetInnerHTML","disableActionSpacing","markType","Close_default","Reply_default","Star_default","StarBorder_default","thread_TagButton","ExitToApp_default","container","separator","oneline","overflow","textOverflow","oneline10","oneline9","oneline8","oneline7","oneline6","oneline5","oneline4","oneline3","oneline2","oneline1","OneLine","onExpandReply","lineClass","recentReplyNumber","input","i","len","char","output","slice","trim","getSnippet","Comments","_ref$parent","parent","onCollapseReply","expandedReplyId","posts","thread_Post","thread_OneLine","truncatedMessage","borderTop","borderBottom","replyCount","truncatedContainer","truncatedComments","memo","rawThread","setExpandedReplyId","setReplyBoxOpenForId","_useState5","_useState6","truncated","setTruncated","_useState7","_useState8","setMarkType","sort","b","reverse","forEach","index","threadId","markThread","handleOpenReplyBox","handleCloseReplyBox","thread_Comments","chatty","font","Chatty","threads","thread_Thread","App","nav_Nav","Switch","Route","path","component","AuthProvider","children","storageValue","localStorage","getItem","ex","removeItem","credentials","setCredentials","isValid","setItem","contextValue","Provider","ChattyProvider","mounted","setChatty","events","setEvents","lastEventId","setLastEventId","updateThreads","freshThreads","freshMarkedPosts","includeNewThreads","nextThreads","markedPosts","nextNewThreads","markedPostsById","maxPostIdByThread","expireDate","ids","getChatty","getMarkedPosts","defineProperty","subHours","isBefore","_ref4","join","fullReload","_ref5","_ref6","eventId","waitForEvent","_ref7","_callee3","_ref8","newerEventId","_events","_context3","_ref9","_callee4","_ref10","_context4","encodeURIComponent","_ref11","_callee5","threadCount","_context5","_ref13","_callee6","_context6","newChatty","eventType","eventData","addReply","updateCategory","updatedPostsById","updates","_ref12","updateTags","updated","debug","handleEvent","progress","zIndex","AsyncLoadingIndicator","loading","LinearProgress_default","right","SyncLoadingIndicator","CircularProgress_default","size","thickness","Snackbars","snackbars","setSnackbars","handleClose","message","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","IndicatorProvider","indicators_SyncLoadingIndicator","indicators_AsyncLoadingIndicator","indicators_Snackbars","FilterProvider","showFilteredUsers","filteredUsers","showFilteredTerms","filteredTerms","setFilterSettings","updatedSettings","some","regex","history","createHistory","Root","Component","Router","index_es","theme","Theme","indicators_IndicatorProvider","auth_AuthProvider","chatty_ChattyProvider","filter_FilterProvider","app_App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.94ccac6f.chunk.js","sourcesContent":["import {install} from '@material-ui/styles'\n\n// This is necessary to import first before MUI components, otherwise the styling will not work as expected.\n// See: https://material-ui.com/css-in-js/basics/#migration-for-material-ui-core-users\ninstall()\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme'\n\nexport default createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#6fbf73',\n            main: '#357a38',\n            dark: '#357a38'\n        },\n        secondary: {\n            light: '#33eaff',\n            main: '#00e5ff',\n            dark: '#00a0b2'\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n})\n","import React from 'react'\n\nexport default React.createContext({})\n","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext, useState} from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport AuthContext from '../context/auth/AuthContext'\nimport IndicatorContext from '../context/indicators/IndicatorContext'\n\nfunction LoginDialog({open, onClose}) {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const {login} = useContext(AuthContext)\n    const {setLoading} = useContext(IndicatorContext)\n\n    const submit = async event => {\n        event.preventDefault()\n\n        try {\n            setLoading('sync')\n\n            await login(username, password)\n\n            onClose()\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <form onSubmit={submit}>\n                <DialogTitle>Log in</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        label='Username'\n                        type='text'\n                        fullWidth\n                        onChange={event => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        margin='dense'\n                        label='Password'\n                        type='password'\n                        fullWidth\n                        onChange={event => setPassword(event.target.value)}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose}>Cancel</Button>\n                    <Button type='submit'>Log in</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    )\n}\n\nexport default LoginDialog\n","import React, {useState} from 'react'\nimport Button from '@material-ui/core/Button'\nimport LoginDialog from './LoginDialog'\n\nfunction LoginButton() {\n    const [open, setOpen] = useState(false)\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen(true)}>Log in</Button>\n\n            <LoginDialog open={open} onClose={() => setOpen(false)}/>\n        </React.Fragment>\n    )\n}\n\nexport default LoginButton\n","import React, {useContext} from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction LoginButton({onClick}) {\n    const {logout} = useContext(AuthContext)\n    const handleClick = () => {\n        onClick && onClick()\n        logout()\n    }\n    return <MenuItem onClick={handleClick}>Logout</MenuItem>\n}\n\nexport default LoginButton\n","import React, {useContext, useState} from 'react'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport LoginButton from '../auth/LoginButton'\nimport LogoutButton from '../auth/LogoutButton'\nimport IconButton from '@material-ui/core/IconButton'\nimport Divider from '@material-ui/core/Divider'\nimport PersonIcon from '@material-ui/icons/Person'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction UserMenu() {\n    const {isLoggedIn, username} = useContext(AuthContext)\n    const [anchorEl, setAnchorEl] = useState(null)\n\n    if (!isLoggedIn) return <LoginButton/>\n    return (\n        <React.Fragment>\n            <IconButton onClick={event => setAnchorEl(event.target)}>\n                <PersonIcon/>\n            </IconButton>\n\n            {anchorEl && <Menu\n                keepMounted\n                open={!!anchorEl}\n                anchorEl={anchorEl}\n                onClose={() => setAnchorEl(null)}\n            >\n                <MenuItem disabled>{username}</MenuItem>\n                <Divider/>\n                <LogoutButton onClick={() => setAnchorEl(null)}/>\n            </Menu>}\n        </React.Fragment>\n    )\n}\n\nexport default UserMenu\n","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport Badge from '@material-ui/core/Badge'\nimport ChattyContext from '../context/chatty/ChattyContext'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction RefreshButton() {\n    const classes = useStyles()\n    const {newThreads, refreshChatty} = useContext(ChattyContext)\n    const displayBadge = newThreads && newThreads.length > 0\n    const title = displayBadge ? `Refresh Thread Order (${newThreads.length} new threads)` : 'Refresh Thread Order'\n\n    return (\n        <Tooltip disableFocusListener title={title} enterDelay={350}>\n            <IconButton onClick={refreshChatty}>\n                {\n                    displayBadge ?\n                        <Badge badgeContent={newThreads.length} color='secondary' classes={{badge: classes.badge}}>\n                            <RefreshIcon/>\n                        </Badge>\n                        : <RefreshIcon/>\n                }\n            </IconButton>\n        </Tooltip>\n    )\n}\n\nconst useStyles = makeStyles({\n    badge: {\n        top: 12\n    }\n})\n\nexport default RefreshButton\n","import querystring from 'querystring'\n\nconst base = 'https://winchatty.com/v2'\n\nexport default async (url, options = {}) => {\n    if (options.body) {\n        options = {\n            ...options,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                ...options.headers\n            },\n            body: querystring.stringify(options.body)\n        }\n    }\n    let res = await fetch(`${base}/${url}`, options)\n    if (res.ok) {\n        return await tryJson(res)\n    } else {\n        let body = await tryJson(res)\n        let {status, statusText} = res\n        let result = {status, statusText, body}\n        console.error('Http Error:', result)\n        return Promise.reject(result)\n    }\n}\n\nconst tryJson = async res => {\n    let text = await res.text()\n    try {\n        return JSON.parse(text)\n    } catch (ex) {\n        return text\n    }\n}\n","import React, {useContext, useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Input from '@material-ui/core/Input'\nimport fetchJson from '../util/fetchJson'\nimport classnames from 'classnames'\nimport AuthContext from '../context/auth/AuthContext'\nimport IndicatorContext from '../context/indicators/IndicatorContext'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction ReplyBox({onCloseReplyBox, parentId, className}) {\n    const classes = useStyles()\n    const {username, password} = useContext(AuthContext)\n    const {setLoading, showSnackbar} = useContext(IndicatorContext)\n    const [text, setText] = useState('')\n    const [posting, setPosting] = useState(false)\n\n    const handleSubmit = async () => {\n        try {\n            setLoading('async')\n            setPosting(true)\n            let response = await fetchJson('postComment', {method: 'POST', body: {username, password, parentId, text}})\n            if (response.result === 'success') {\n                onCloseReplyBox()\n            }\n        } catch (ex) {\n            console.log('Error while posting comment', ex)\n            showSnackbar('Error while posting. Please try again later.')\n            setPosting(false)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    return (\n        <Card className={classnames(className, classes.card)}>\n            {parentId === 0 && <CardHeader title='New Thread'/>}\n            <CardContent>\n                <div className={classes.flexRow}>\n                    <Input\n                        multiline\n                        autoFocus\n                        disableUnderline\n                        rows={5}\n                        fullWidth\n                        className={classes.textarea}\n                        placeholder='Type something interesting...'\n                        name='replyBody'\n                        required\n                        disabled={posting}\n                        onChange={event => setText(event.target.value)}\n                    />\n                </div>\n            </CardContent>\n            <CardActions className={classes.actions}>\n                <Button\n                    color='primary'\n                    variant='outlined'\n                    disabled={posting || !text.length}\n                    onClick={handleSubmit}\n                >Post\n                </Button>\n                <Button\n                    variant='outlined'\n                    disabled={posting}\n                    onClick={onCloseReplyBox}\n                >Cancel\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst useStyles = makeStyles({\n    card: {\n        backgroundColor: '#202224',\n        borderRadius: 0,\n        border: '1px solid #656565'\n    },\n    actions: {\n        margin: '-8px 0 8px 8px'\n    },\n    flexRow: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    textarea: {\n        flex: 1,\n        backgroundColor: '#000',\n        padding: 4\n    }\n})\n\nexport default ReplyBox\n","import React, {useContext, useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddIcon from '../../node_modules/@material-ui/icons/Add'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Dialog from '@material-ui/core/Dialog'\nimport ReplyBox from '../replyBox/ReplyBox'\nimport AuthContext from '../context/auth/AuthContext'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction NewThreadButton() {\n    const classes = useStyles()\n    const {isLoggedIn} = useContext(AuthContext)\n    const [open, setOpen] = useState(false)\n    if (!isLoggedIn) return null\n\n    return (\n        <React.Fragment>\n            <Tooltip disableFocusListener title='New Thread' enterDelay={350}>\n                <IconButton onClick={() => setOpen(true)}>\n                    <AddIcon/>\n                </IconButton>\n            </Tooltip>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                classes={{paper: classes.dialogPaper}}\n            >\n                <ReplyBox\n                    parentId={0}\n                    onCloseReplyBox={() => setOpen(false)}\n                />\n            </Dialog>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    dialogPaper: {\n        width: '85vw'\n    }\n})\n\nexport default NewThreadButton\n","import React, {useContext, useEffect, useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport MessageIcon from '@material-ui/icons/Message'\nimport Badge from '@material-ui/core/Badge'\nimport {makeStyles} from '@material-ui/styles'\nimport fetchJson from '../util/fetchJson'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction MessagesButton() {\n    const classes = useStyles()\n    const {isLoggedIn, username, password} = useContext(AuthContext)\n\n    const [totalMessagesCount, setTotalMessagesCount] = useState(0)\n    const [unreadMessagesCount, setUnreadMessagesCount] = useState(0)\n\n    const displayBadge = unreadMessagesCount > 0\n    const title = `( ${unreadMessagesCount} / ${totalMessagesCount} ) unread messages`\n\n    const getCounts = async () => {\n        if (isLoggedIn) {\n            const options = {method: 'POST', body: {username, password}}\n            const {total, unread} = await fetchJson('getMessageCount', options)\n            setTotalMessagesCount(total)\n            setUnreadMessagesCount(unread)\n        }\n    }\n\n    // update counts every 15 minutes\n    useEffect(() => {\n        getCounts()\n\n        const id = setInterval(() => getCounts(), 15 * 60 * 1000)\n        return () => clearInterval(id)\n    }, [isLoggedIn])\n\n    if (!isLoggedIn) return null\n    return (\n        <Tooltip disableFocusListener title={title} enterDelay={350}>\n            <IconButton href='https://www.shacknews.com/messages' target='_blank'>\n                {\n                    displayBadge\n                        ? <Badge\n                            badgeContent={unreadMessagesCount}\n                            color='secondary'\n                            classes={{badge: classes.badge}}\n                        >\n                            <MessageIcon/>\n                        </Badge>\n                        : <MessageIcon/>\n                }\n            </IconButton>\n        </Tooltip>\n    )\n}\n\nconst useStyles = makeStyles({\n    badge: {\n        top: 12\n    }\n})\n\nexport default MessagesButton\n","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext, useState} from 'react'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Dialog from '@material-ui/core/Dialog'\nimport Button from '@material-ui/core/Button'\nimport FilterContext from '../context/filter/FilterContext'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction FilterDialog({open, onClose}) {\n    const classes = useStyles()\n    const {filterSettings, updateFilterSettings} = useContext(FilterContext)\n    const [showCollapsed, setShowCollapsed] = useState(filterSettings.showCollapsed)\n\n    const handleSave = () => {\n        updateFilterSettings({showCollapsed})\n        onClose()\n    }\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>Filter Threads/Posts</DialogTitle>\n            <DialogContent className={classes.content}>\n                <FormControlLabel\n                    label='Show Collapsed Threads'\n                    control={\n                        <Checkbox\n                            checked={showCollapsed}\n                            onChange={() => setShowCollapsed(!showCollapsed)}\n                            value='showCollapsed'\n                        />\n                    }\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>Cancel</Button>\n                <Button onClick={handleSave}>Save</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst useStyles = makeStyles({\n    content: {\n        display: 'flex',\n        flexDirection: 'column'\n    }\n})\n\nexport default FilterDialog\n","import React, {useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton/IconButton'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip'\nimport FilterDialog from './FilterDialog'\n\nfunction FilterButton() {\n    const [open, setOpen] = useState(false)\n    return (\n        <React.Fragment>\n            <Tooltip disableFocusListener title='Filter Threads/Posts' enterDelay={350}>\n                <IconButton onClick={() => setOpen(true)}>\n                    <FilterListIcon/>\n                </IconButton>\n            </Tooltip>\n\n            <FilterDialog open={open} onClose={() => setOpen(false)}/>\n        </React.Fragment>\n    )\n}\n\nexport default FilterButton\n","import React, {useState} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport UserMenu from '../userMenu/UserMenu'\nimport RefreshButton from './RefreshButton'\nimport NewThreadButton from './NewThreadButton'\nimport MessagesButton from './MessagesButton'\nimport FilterButton from '../filter/FilterButton'\nimport Drawer from '@material-ui/core/Drawer'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Nav() {\n    const classes = useStyles()\n    const [drawerOpen, setDrawerOpen] = useState(false)\n    const closeDrawer = () => setDrawerOpen(false)\n\n    return (\n        <React.Fragment>\n            <AppBar elevation={0}>\n                <Toolbar>\n                    <IconButton className={classes.menuButton} onClick={() => setDrawerOpen(!drawerOpen)}>\n                        <MenuIcon className={classes.white}/>\n                    </IconButton>\n\n                    <Typography variant=\"h5\" className={classes.title}>Chatty</Typography>\n\n                    <FilterButton/>\n                    <NewThreadButton/>\n                    <MessagesButton/>\n                    <RefreshButton/>\n                    <UserMenu/>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer open={drawerOpen} onClose={closeDrawer} className={classes.drawer}>\n                <AppBar position=\"static\" color=\"primary\" className={classes.drawerAppBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>Latest Chatty</Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <a\n                    href=\"https://github.com/latestchatty/chatty\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className={classes.menuItem}>\n                    <MenuItem onClick={closeDrawer}>Contribute</MenuItem>\n                </a>\n                <a\n                    href=\"https://github.com/latestchatty/chatty/issues\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className={classes.menuItem}>\n                    <MenuItem onClick={closeDrawer}>Feedback</MenuItem>\n                </a>\n            </Drawer>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    white: {\n        color: '#fff'\n    },\n    title: {\n        color: '#fff',\n        flex: 1\n    },\n    menuButton: {\n        marginLeft: -15,\n        marginRight: 8\n    },\n    menuItem: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n})\n\nexport default Nav\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction PostExpirationBar({date}) {\n    const classes = useStyles()\n    const now = (new Date().getTime())\n    const then = new Date(date).getTime()\n    const percent = Math.min((((now - then) / 3600000) / 18) * 100, 100)\n\n    let backgroundColor = 'red'\n    if (percent <= 25) {\n        backgroundColor = 'springgreen'\n    } else if (percent <= 50) {\n        backgroundColor = 'yellow'\n    } else if (percent <= 75) {\n        backgroundColor = 'orange'\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <div\n                className={classes.value}\n                style={{width: `${percent}%`, backgroundColor}}\n            />\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    wrapper: {\n        height: 8,\n        width: 48,\n        margin: 7,\n        background:\n            `rgb(221, 221, 221) -webkit-gradient(\n                linear,\n                0% 0%,\n                0% 100%,\n                from(rgb(170, 170, 170)),\n                color-stop(0.4, rgb(204, 204, 204)),\n                color-stop(0.6, rgb(204, 204, 204)),\n                to(rgb(238, 238, 238))\n            )`\n    },\n    value: {\n        height: 8,\n        backgroundImage:\n            `-webkit-gradient(\n                linear,\n                0 100%,\n                100% 0,\n                color-stop(0.25, rgba(255, 255, 255, 0.4)),\n                color-stop(0.25, transparent),\n                color-stop(0.5, transparent),\n                color-stop(0.5, rgba(255, 255, 255, 0.4)),\n                color-stop(0.75, rgba(255, 255, 255, 0.4)),\n                color-stop(0.75, transparent),\n                to(transparent)\n            )`,\n        backgroundSize: '25px 25px',\n        boxShadow: 'rgba(255, 255, 255, 0.298039) 0 2px 4px inset, rgba(0, 0, 0, 0.4) 0 -2px 3px inset'\n    }\n})\n\nexport default PostExpirationBar\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport format from 'date-fns/format'\nimport distanceInWordsToNow from 'date-fns/distance_in_words_to_now'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction PostDate({date}) {\n    const classes = useStyles()\n    return (\n        <Tooltip disableFocusListener title={format(date, 'MMM DD, YYYY h:mma')} enterDelay={350}>\n            <div className={classes.date}>{distanceInWordsToNow(date)} ago</div>\n        </Tooltip>\n    )\n}\n\nconst useStyles = makeStyles({\n    date: {\n        fontSize: 10,\n        color: '#888',\n        paddingTop: 3,\n        marginRight: 3\n    }\n})\n\nexport default PostDate\n","import React, {useContext, useMemo} from 'react'\nimport classnames from 'classnames'\nimport AuthContext from '../context/auth/AuthContext'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction PostAuthor({post = {}, thread = {}}) {\n    const classes = useStyles()\n    const {username} = useContext(AuthContext)\n    const {author = ''} = post\n\n    const isSameUser = (one = '', two = '') => {\n        const left = one.toLowerCase().replace(/\\s/g, '')\n        const right = two.toLowerCase().replace(/\\s/g, '')\n        return left === right\n    }\n\n    const userClass = useMemo(() => {\n        if (username && isSameUser(author, username)) return 'self'\n        else if (thread.id !== post.id && isSameUser(thread.author, author)) return 'op'\n        else if (employees.find(employee => isSameUser(employee, author))) return 'employee'\n        else if (mods.find(mod => isSameUser(mod, author))) return 'mod'\n        return 'normal'\n    }, [username, author, thread.id, post.id, thread.author])\n\n    // Don't let the browser line break in the middle of author name\n    const nonBreakingAuthor = useMemo(() => author.replace(/\\s/g, String.fromCharCode(160)), [author])\n\n    return (\n        <span className={classnames(classes.user, classes[userClass])}>\n            {nonBreakingAuthor}\n        </span>\n    )\n}\n\nconst employees = [\n    'themanwiththebriefcase',\n    'shacknews'\n]\nconst mods = []\n\nconst useStyles = makeStyles({\n    user: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        '&:hover': {\n            textDecoration: 'underline'\n        }\n    },\n    normal: {\n        color: '#f3e7b5'\n    },\n    self: {\n        color: '#6cf'\n    },\n    op: {\n        color: '#6aff94'\n    },\n    mod: {\n        color: '#d20000'\n    },\n    employee: {\n        color: '#9370db'\n    }\n})\n\nexport default PostAuthor\n","export default ['lol', 'inf', 'unf', 'wtf']\n","import React, {useMemo} from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport classnames from 'classnames'\nimport supportedTags from './supportedTags'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Tags({tags = [], variant}) {\n    const classes = useStyles()\n    const fixedTags = useMemo(() => {\n        const validTags = tags.filter(tag => supportedTags.includes(tag.tag))\n        const miscTagCount = tags.filter(tag => !supportedTags.includes(tag.tag))\n            .reduce((acc, tag) => acc + tag.count, 0)\n        return [\n            ...validTags,\n            {tag: 'tag', count: miscTagCount}\n        ]\n    }, [tags])\n\n    return (\n        <div className={variant === 'post' ? classes.containerPost : classes.containerOneline}>\n            {fixedTags.map(tag => {\n                if (tag.count < 1) return null\n                else if (variant === 'post') {\n                    return (\n                        <Chip\n                            key={tag.tag}\n                            className={classnames(classes.chip, classes[tag.tag], classes[`${tag.tag}Border`])}\n                            label={`${tag.count} ${tag.tag}`}\n                            variant='outlined'\n                        />\n                    )\n                } else if (variant === 'oneline') {\n                    return (\n                        <span key={tag.tag} className={classnames(classes.nonChip, classes[tag.tag])}>\n                            {`${tag.count} ${tag.tag}`}\n                        </span>\n                    )\n                }\n                return null\n            })}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    containerPost: {\n        marginLeft: 12\n    },\n    containerOneline: {\n        marginLeft: 4,\n        whiteSpace: 'nowrap'\n    },\n    chip: {\n        height: 16,\n        marginTop: 2,\n        marginRight: 6,\n        fontSize: 10\n    },\n    nonChip: {\n        marginRight: 4,\n        fontSize: 9\n    },\n    lolBorder: {\n        border: '1px solid #f80'\n    },\n    infBorder: {\n        border: '1px solid #09c'\n    },\n    unfBorder: {\n        border: '1px solid #f00'\n    },\n    wtfBorder: {\n        border: '1px solid #c000c0'\n    },\n    tagBorder: {\n        border: '1px solid #bbaf57'\n    },\n    lol: {\n        color: '#f80'\n    },\n    inf: {\n        color: '#09c'\n    },\n    unf: {\n        color: '#f00'\n    },\n    wtf: {\n        color: '#c000c0'\n    },\n    tag: {\n        color: '#bbaf57'\n    }\n})\n\nexport default Tags\n","import React, {useContext, useState} from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport LabelIcon from '@material-ui/icons/Label'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport querystring from 'querystring'\nimport AuthContext from '../context/auth/AuthContext'\nimport supportedTags from './supportedTags'\nimport IndicatorContext from '../context/indicators/IndicatorContext'\n\nfunction TagButton({className, postId}) {\n    const {isLoggedIn, username} = useContext(AuthContext)\n    const {setLoading, showSnackbar} = useContext(IndicatorContext)\n    const [anchorEl, setAnchorEl] = useState(null)\n\n    const tags = supportedTags.map(tag => tag.toUpperCase())\n\n    const handleTag = async tag => {\n        try {\n            setLoading('async')\n            setAnchorEl(null)\n\n            let text = await tagPost(username, postId, tag)\n            if (text.includes('already tagged')) {\n                text = await tagPost(username, postId, tag, 'untag')\n            }\n            if (!text.match(/^ok /)) {\n                console.warn('Error tagging post', text)\n            }\n        } catch (err) {\n            console.error('Exception while tagging post', err)\n            showSnackbar('Error while tagging post. Please try again later.')\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    const tagPost = async (who, what, tag, action) => {\n        const base = 'https://lol.lmnopc.com/report.php'\n        const params = {who, what, tag, version: -1}\n        if (action) params.action = action\n        const response = await fetch(`${base}?${querystring.stringify(params)}`, {method: 'POST'})\n        return response.text()\n    }\n\n    if (!isLoggedIn) return null\n    return (\n        <React.Fragment>\n            <Tooltip disableFocusListener title='Tag Post' enterDelay={350}>\n                <LabelIcon className={className} onClick={event => setAnchorEl(event.target)}/>\n            </Tooltip>\n\n            {\n                anchorEl && <Menu\n                    keepMounted\n                    open={!!anchorEl}\n                    anchorEl={anchorEl}\n                    onClose={() => setAnchorEl(null)}\n                >\n                    {tags.map(tag => <MenuItem key={tag} onClick={() => handleTag(tag)}>{tag}</MenuItem>)}\n                </Menu>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default TagButton\n","import React, {useContext, useEffect, useMemo, useRef} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport CloseIcon from '@material-ui/icons/Close'\nimport StarIcon from '@material-ui/icons/Star'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport ReplyIcon from '@material-ui/icons/Reply'\nimport PostExpirationBar from './PostExpirationBar'\nimport PostDate from './PostDate'\nimport PostAuthor from './PostAuthor'\nimport classnames from 'classnames'\nimport ReplyBox from '../replyBox/ReplyBox'\nimport Tags from './Tags'\nimport TagButton from './TagButton'\nimport AuthContext from '../context/auth/AuthContext'\nimport FilterContext from '../context/filter/FilterContext'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Post({post, thread, onCollapse, onPinned, replyBoxOpenForId, onOpenReplyBox, onCloseReplyBox}) {\n    const classes = useStyles()\n    const domElement = useRef(null)\n    const {isLoggedIn} = useContext(AuthContext)\n    const {isPostVisible} = useContext(FilterContext)\n\n    const html = useMemo(() => {\n        let fixed = post.body\n        if (post.author === 'Shacknews') {\n            fixed = post.body.replace('href=\"/', 'href=\"https://www.shacknews.com/')\n        }\n        return {__html: fixed}\n    }, [post.body])\n\n    const tagClass = useMemo(() => {\n        if (post.category === 'nuked') {\n            return null\n        } else if (post.category === 'nws') {\n            return 'tagNws'\n        } else if (post.category === 'informative') {\n            return 'tagInformative'\n        } else if (/shacknews/i.test(post.author)) {\n            return 'tagFrontpage'\n        }\n        return null\n    }, [post.category, post.author])\n\n    const isReply = post.parentId > 0\n    const replyBorder = isReply ? 'replyBorder' : null\n\n    const handleReplyClick = () => onOpenReplyBox(post.id)\n\n    if (!isPostVisible(thread, post)) return null\n\n    // Scroll into view when first visible\n    useEffect(() => {\n        if (isReply) {\n            const rect = domElement.current.getBoundingClientRect()\n            const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight)\n            const above = rect.bottom < 0\n            const below = rect.top - viewHeight >= 0\n            if (above) {\n                window.scrollTo({\n                    left: 0,\n                    top: domElement.current.offsetTop - 75,\n                    behavior: 'smooth'\n                })\n            } else if (below) {\n                window.scrollTo({\n                    left: 0,\n                    top: domElement.current.offsetTop - viewHeight + rect.height + 24,\n                    behavior: 'smooth'\n                })\n            }\n        }\n    }, [])\n\n    return (\n        <React.Fragment>\n            <div ref={domElement}>\n                <Card className={classnames(classes.card, classes[tagClass], classes[replyBorder])}>\n                    <div className={classes.header}>\n                        <PostAuthor post={post} thread={thread}/>\n\n                        <Tags tags={post.lols} variant='post'/>\n\n                        <span className={classes.flex}/>\n\n                        <PostDate date={post.date}/>\n\n                        {post.parentId === 0 && <PostExpirationBar date={post.date}/>}\n                    </div>\n\n                    <CardContent className={classnames('postbody', classes.content)}>\n                        <span dangerouslySetInnerHTML={html}/>\n                    </CardContent>\n\n                    <CardActions className={classes.actions} disableActionSpacing>\n                        <Tooltip\n                            disableFocusListener\n                            title={post.markType === 'collapsed' ? 'Uncollapse' : 'Collapse'}\n                            enterDelay={350}\n                        >\n                            <CloseIcon\n                                className={\n                                    classnames(classes.toolbarButton, post.markType === 'collapsed' ? classes.collapsed : null)\n                                }\n                                onClick={onCollapse}\n                            />\n                        </Tooltip>\n\n                        {\n                            isLoggedIn &&\n                            <Tooltip disableFocusListener title='Reply' enterDelay={350}>\n                                <ReplyIcon className={classes.toolbarButton} onClick={handleReplyClick}/>\n                            </Tooltip>\n                        }\n\n                        {\n                            isLoggedIn && post.parentId === 0 &&\n                            <React.Fragment>\n                                {\n                                    post.markType === 'pinned' &&\n                                    <Tooltip disableFocusListener title='Unpin Thread' enterDelay={350}>\n                                        <StarIcon\n                                            className={classnames(classes.toolbarButton, classes.pinned)}\n                                            onClick={onPinned}\n                                        />\n                                    </Tooltip>\n                                }\n                                {\n                                    post.markType !== 'pinned' &&\n                                    <Tooltip disableFocusListener title='Pin Thread' enterDelay={350}>\n                                        <StarBorderIcon className={classes.toolbarButton} onClick={onPinned}/>\n                                    </Tooltip>\n                                }\n                            </React.Fragment>\n                        }\n\n                        <TagButton postId={post.id} className={classes.toolbarButton}/>\n\n                        <Tooltip disableFocusListener title='View Post @ Shacknews.com' enterDelay={350}>\n                            <a\n                                className={classes.toolbarButton}\n                                target='_blank'\n                                rel=\"noopener noreferrer\"\n                                href={`http://www.shacknews.com/chatty?id=${post.id}#item_${post.id}`}\n                            >\n                                <ExitToAppIcon className={classes.toolbarButton}/>\n                            </a>\n                        </Tooltip>\n                    </CardActions>\n                </Card>\n            </div>\n            {\n                replyBoxOpenForId === post.id &&\n                <ReplyBox parentId={post.id} onCloseReplyBox={onCloseReplyBox} className={classes.replyBox}/>\n            }\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    card: {\n        backgroundColor: '#202224',\n        borderRadius: 0,\n        marginBottom: 3\n    },\n    replyBorder: {\n        border: '1px solid #656565'\n    },\n    replyBox: {\n        marginTop: -3\n    },\n    tagNws: {\n        borderLeft: '3px solid red !important'\n    },\n    tagInformative: {\n        borderLeft: '3px solid #00bff3 !important'\n    },\n    tagFrontpage: {\n        borderLeft: '3px solid mediumpurple !important'\n    },\n    content: {\n        maxWidth: 'calc(100vw - 32)',\n        color: 'lightgray',\n        fontSize: 13,\n        padding: '8px 16px'\n    },\n    header: {\n        backgroundColor: '#373a3c',\n        padding: '3px 3px 3px 16px',\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    actions: {\n        height: 34\n    },\n    flex: {\n        flex: 1\n    },\n    toolbarButton: {\n        width: 18,\n        height: 18,\n        cursor: 'pointer',\n        color: '#fff',\n        marginRight: 6\n    },\n    collapsed: {\n        color: '#f00 !important'\n    },\n    pinned: {\n        color: '#fcbf20 !important'\n    }\n})\n\nexport default Post\n","import React, {useMemo} from 'react'\nimport PostAuthor from './PostAuthor'\nimport classnames from 'classnames'\nimport Tags from './Tags'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction OneLine({post, thread, onExpandReply}) {\n    const classes = useStyles()\n    const getSnippet = body => {\n        const input = body.replace(/(<(?!span)(?!\\/span)[^>]+>| tabindex=\"1\")/gm, ' ')\n        const maxLength = 106\n\n        let i = 0\n        let len = 0\n        let tag = false\n        let char = false\n        while (i < input.length && len < maxLength) {\n            if (input[i] === '<') {\n                tag = true\n            } else if (input[i] === '>') {\n                tag = false\n            } else if (input[i] === '&') {\n                char = true\n            } else if (input[i] === '' && char) {\n                char = false\n                len++\n            } else if (!tag) {\n                len++\n            }\n\n            i++\n        }\n\n        let output = input.slice(0, i).trim()\n        if (i < input.length || !output) {\n            output += '...'\n        }\n\n        return output\n    }\n\n    const lineClass = `oneline${post.recentReplyNumber || 9}`\n    const oneline = useMemo(() => getSnippet(post.body), [post.body])\n\n    return (\n        <div className={classes.container}>\n                <span\n                    className={classnames(classes.oneline, classes[lineClass])}\n                    dangerouslySetInnerHTML={{__html: oneline}}\n                    onClick={() => onExpandReply(post.id)}\n                />\n            <Tags tags={post.lols} variant='oneline'/>\n            <PostAuthor post={post} thread={thread}/>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    separator: {\n        padding: '0 3px',\n        fontSize: 11,\n        color: '#fff'\n    },\n    oneline: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        '&:hover': {\n            color: '#fff',\n            backgroundColor: '#233548',\n            cursor: 'pointer'\n        }\n    },\n    oneline10: {\n        color: '#777'\n    },\n    oneline9: {\n        color: '#888'\n    },\n    oneline8: {\n        color: '#999'\n    },\n    oneline7: {\n        color: '#aaa'\n    },\n    oneline6: {\n        color: '#bbb'\n    },\n    oneline5: {\n        color: '#ccc'\n    },\n    oneline4: {\n        color: '#ddd'\n    },\n    oneline3: {\n        color: '#eee'\n    },\n    oneline2: {\n        color: '#fff'\n    },\n    oneline1: {\n        color: '#eee',\n        fontWeight: 'bold'\n    }\n})\n\nexport default OneLine\n","import React, {useContext} from 'react'\nimport Post from './Post'\nimport OneLine from './OneLine'\nimport FilterContext from '../context/filter/FilterContext'\nimport classnames from 'classnames'\n\nfunction Comments({className, thread = {}, parent = thread, onCollapseReply, onExpandReply, onOpenReplyBox, expandedReplyId, replyBoxOpenForId, onCloseReplyBox}) {\n    const {isPostVisible} = useContext(FilterContext)\n    return (\n        <ul className={classnames('comments', className)}>\n            {\n                thread.posts\n                    .filter(post => post.parentId === parent.id)\n                    .filter(post => isPostVisible(thread, post))\n                    .map(post =>\n                        <li key={post.id}>\n                            {\n                                expandedReplyId === post.id\n                                    ? <Post\n                                        post={post}\n                                        thread={thread}\n                                        onCollapse={onCollapseReply}\n                                        replyBoxOpenForId={replyBoxOpenForId}\n                                        onOpenReplyBox={onOpenReplyBox}\n                                        onCloseReplyBox={onCloseReplyBox}\n                                    />\n                                    : <OneLine\n                                        post={post}\n                                        thread={thread}\n                                        onExpandReply={onExpandReply}\n                                    />\n                            }\n                            <Comments\n                                thread={thread}\n                                parent={post}\n                                expandedReplyId={expandedReplyId}\n                                replyBoxOpenForId={replyBoxOpenForId}\n                                onExpandReply={onExpandReply}\n                                onCollapseReply={onCollapseReply}\n                                onOpenReplyBox={onOpenReplyBox}\n                                onCloseReplyBox={onCloseReplyBox}\n                            />\n                        </li>\n                    )\n            }\n        </ul>\n    )\n}\n\nexport default Comments\n","import React, {useContext, useMemo, useState} from 'react'\nimport Post from './Post'\nimport Comments from './Comments'\nimport FilterContext from '../context/filter/FilterContext'\nimport {makeStyles} from '@material-ui/styles'\nimport fetchJson from '../util/fetchJson'\nimport AuthContext from '../context/auth/AuthContext'\n\nfunction Thread({thread: rawThread}) {\n    const classes = useStyles()\n    const [expandedReplyId, setExpandedReplyId] = useState(null)\n    const [replyBoxOpenForId, setReplyBoxOpenForId] = useState(null)\n    const [truncated, setTruncated] = useState(rawThread.posts.length > 20)\n    const [markType, setMarkType] = useState(rawThread.markType)\n    const {username, isLoggedIn} = useContext(AuthContext)\n    const {isPostVisible} = useContext(FilterContext)\n    const thread = useMemo(() => {\n        const posts = rawThread.posts ? rawThread.posts.sort((a, b) => a.id - b.id) : []\n\n        // oneline highlights\n        posts.slice(-10)\n            .reverse()\n            .forEach((post, index) => post.recentReplyNumber = index + 1)\n\n        const [post] = posts\n        return {\n            ...rawThread,\n            ...post,\n            id: +rawThread.threadId,\n            posts: posts,\n            markType\n        }\n    }, [rawThread, markType])\n\n    const markThread = async (postId, type) => {\n        setMarkType(type)\n        if (isLoggedIn) {\n            await fetchJson('clientData/markPost', {\n                method: 'POST',\n                body: {username, postId, type}\n            })\n        }\n    }\n\n    const handleExpandReply = expandedReplyId => {\n        setExpandedReplyId(expandedReplyId)\n        setReplyBoxOpenForId(null)\n        setTruncated(false)\n    }\n    const handleCollapseReply = () => {\n        setExpandedReplyId(null)\n        setReplyBoxOpenForId(null)\n    }\n    const handleOpenReplyBox = id => setReplyBoxOpenForId(id)\n    const handleCloseReplyBox = () => setReplyBoxOpenForId(null)\n\n    const handleCollapse = () => markThread(thread.threadId, thread.markType === 'unmarked' ? 'collapsed' : 'unmarked')\n    const togglePinned = () => markThread(thread.threadId, thread.markType === 'unmarked' ? 'pinned' : 'unmarked')\n\n    if (!isPostVisible(thread)) return null\n    return (\n        <div className={classes.thread}>\n            <Post\n                post={thread}\n                thread={thread}\n                replyBoxOpenForId={replyBoxOpenForId}\n                onCollapse={handleCollapse}\n                onOpenReplyBox={handleOpenReplyBox}\n                onCloseReplyBox={handleCloseReplyBox}\n                onPinned={togglePinned}\n            />\n\n            {\n                truncated &&\n                <div className={classes.truncatedMessage} onClick={() => setTruncated(false)}>\n                    Thread truncated. Click to see all&nbsp;\n                    <span className={classes.replyCount}>{thread.posts.length - 1}</span>\n                    &nbsp;replies.\n                </div>\n            }\n\n            <div className={truncated ? classes.truncatedContainer : null}>\n                <Comments\n                    className={truncated ? classes.truncatedComments : null}\n                    thread={thread}\n                    expandedReplyId={expandedReplyId}\n                    replyBoxOpenForId={replyBoxOpenForId}\n                    onExpandReply={handleExpandReply}\n                    onCollapseReply={handleCollapseReply}\n                    onOpenReplyBox={handleOpenReplyBox}\n                    onCloseReplyBox={handleCloseReplyBox}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    thread: {\n        marginBottom: 15\n    },\n    truncatedMessage: {\n        color: '#fff',\n        fontWeight: 'bold',\n        borderTop: '1px solid #656565',\n        borderBottom: '1px dotted #fff',\n        backgroundColor: '#181818',\n        cursor: 'pointer',\n        marginTop: -3,\n        '&:hover': {\n            backgroundColor: '#282828'\n        }\n    },\n    replyCount: {\n        color: '#00bff3'\n    },\n    truncatedContainer: {\n        height: 300,\n        overflow: 'hidden',\n        position: 'relative'\n    },\n    truncatedComments: {\n        position: 'absolute !important',\n        bottom: 0\n    }\n})\n\nexport default React.memo(Thread)\n","import React, {useContext} from 'react'\nimport Thread from '../thread/Thread'\nimport ChattyContext from '../context/chatty/ChattyContext'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Chatty() {\n    const classes = useStyles()\n    const {threads} = useContext(ChattyContext)\n    return (\n        <div className={classes.chatty}>\n            {threads.map(thread => <Thread key={thread.threadId} thread={thread}/>)}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    chatty: {\n        margin: '72px 8px 8px 8px',\n        font: '12px/1.5 arial, helvetica, clean, sans-serif'\n    }\n})\n\nexport default Chatty\n","import React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport Nav from '../nav/Nav'\nimport Chatty from '../chatty/Chatty'\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Nav/>\n            <Switch>\n                <Route path=\"/chatty\" component={Chatty}/>\n\n                <Route component={Chatty}/>\n            </Switch>\n        </React.Fragment>\n    )\n}\n\nexport default App\n","import React, {useContext, useState} from 'react'\nimport AuthContext from './AuthContext'\nimport fetchJson from '../../util/fetchJson'\nimport IndicatorContext from '../indicators/IndicatorContext'\n\nfunction AuthProvider({children}) {\n    const {setLoading, showSnackbar} = useContext(IndicatorContext)\n    const [credentials, setCredentials] = useState(() => {\n        try {\n            const storageValue = localStorage.getItem('auth') || '{}'\n            const {username, password} = JSON.parse(storageValue) || {}\n            return {username, password}\n        } catch (ex) {\n            console.log('Invalid storage value: auth', ex)\n            localStorage.removeItem('auth')\n            return {username: null, password: null}\n        }\n    })\n\n    const login = async (username, password) => {\n        try {\n            setLoading('async')\n\n            const result = await fetchJson(`verifyCredentials`, {method: 'POST', body: {username, password}})\n\n            if (result.isValid) {\n                localStorage.setItem('auth', JSON.stringify({username, password}))\n                setCredentials({username, password})\n            } else {\n                console.log('Invalid login credentials.')\n                showSnackbar('Invalid username/password. Please check them and try again')\n            }\n        } catch (ex) {\n            console.log('Error while logging in', ex)\n            showSnackbar('Error while logging in. Please try again later.')\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    const logout = () => {\n        localStorage.removeItem('auth')\n        setCredentials({username: null, password: null})\n    }\n\n    const isLoggedIn = credentials.username && credentials.password\n    const contextValue = {...credentials, isLoggedIn, login, logout}\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider\n","import React, {useContext, useEffect, useState} from 'react'\nimport ChattyContext from './ChattyContext'\nimport fetchJson from '../../util/fetchJson'\nimport AuthContext from '../auth/AuthContext'\nimport IndicatorContext from '../indicators/IndicatorContext'\nimport subHours from 'date-fns/sub_hours'\nimport isBefore from 'date-fns/is_before'\n\nfunction ChattyProvider({children}) {\n    let mounted = true\n    const {isLoggedIn, username} = useContext(AuthContext)\n    const {setLoading, showSnackbar} = useContext(IndicatorContext)\n\n    const [chatty, setChatty] = useState({threads: [], newThreads: []})\n\n    const [events, setEvents] = useState([])\n    const [lastEventId, setLastEventId] = useState(null)\n\n    const updateThreads = async (freshThreads = false, freshMarkedPosts = false, includeNewThreads = false) => {\n        // fresh chatty load from server\n        let {threads: nextThreads} = freshThreads ? await getChatty() : {}\n\n        // process marked posts if needed\n        let markedPosts\n        if (freshMarkedPosts) markedPosts = await getMarkedPosts(freshMarkedPosts)\n\n        // compile new thread state\n        nextThreads = nextThreads || chatty.threads\n\n        // only add in new threads when needed\n        nextThreads = includeNewThreads ? chatty.newThreads.concat(nextThreads) : nextThreads\n        let nextNewThreads = includeNewThreads ? [] : chatty.newThreads\n\n        // if we're loading marked posts, process the data\n        if (markedPosts) {\n            const markedPostsById = markedPosts\n                .reduce((acc, post) => ({\n                    ...acc,\n                    [post.id]: post.type\n                }), {})\n\n            // update post markings\n            nextThreads = nextThreads\n                .map(thread => ({\n                    ...thread,\n                    markType: markedPostsById[thread.threadId] || 'unmarked'\n                }))\n        }\n\n        // order by recent activity\n        let maxPostIdByThread = nextThreads\n            .reduce((acc, thread) => {\n                acc[thread.threadId] = thread.posts.reduce((acc, post) => Math.max(post.id, acc), 0)\n                return acc\n            }, {})\n\n        // remove expired threads\n        const expireDate = subHours(Date.now(), 18)\n        nextThreads = nextThreads.filter(thread => {\n            const threadId = +thread.threadId\n            const post = thread.posts.find(post => post.id === threadId)\n            return isBefore(expireDate, post.date)\n        })\n\n        // sort by activity, pinned first\n        nextThreads = nextThreads\n            .sort((a, b) => maxPostIdByThread[b.threadId] - maxPostIdByThread[a.threadId])\n            .sort((a, b) => a.markType === b.markType === 'pinned' ? 0 : a.markType === 'pinned' ? -1 : 1)\n\n        // update state to trigger render\n        setChatty({\n            threads: nextThreads,\n            newThreads: nextNewThreads\n        })\n\n        // clean up any old posts after loading, doesn't impact state\n        if (markedPosts) {\n            let ids = markedPosts\n                .filter(post => !maxPostIdByThread[post.id])\n                .map(({id}) => id)\n            if (ids.length) {\n                await fetchJson('clientData/markPost', {\n                    method: 'POST',\n                    body: {username, postId: ids.join(','), type: 'unmarked'}\n                })\n            }\n        }\n    }\n\n    const fullReload = async () => {\n        try {\n            setLoading('async')\n\n            const {eventId} = await fetchJson('getNewestEventId')\n            await updateThreads(true, true, false)\n            setLastEventId(eventId)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    const waitForEvent = async () => {\n        if (mounted && lastEventId) {\n            const {lastEventId: newerEventId, events, error} = await fetchJson(`waitForEvent?lastEventId=${lastEventId}`)\n\n            if (mounted) {\n                if (!error) {\n                    setEvents(events)\n                    setLastEventId(newerEventId)\n                } else {\n                    console.error('Error from API:waitForLastEvent call.', error)\n                    showSnackbar('Error receiving events. Reloading full chatty.')\n                    return fullReload()\n                }\n            }\n        }\n    }\n\n    const getMarkedPosts = async () => {\n        if (isLoggedIn) {\n            const {markedPosts} = await fetchJson(`clientData/getMarkedPosts?username=${encodeURIComponent(username)}`)\n            return markedPosts\n        }\n        return []\n    }\n\n    const getChatty = async threadCount => {\n        return await fetchJson(`getChatty${threadCount > 0 ? `?count=${threadCount}` : ''}`)\n    }\n\n    const handleEvent = (event = {}, current) => {\n        const {eventType, eventData} = event\n\n        if (eventType === 'newPost') {\n            const {post} = eventData\n            if (post.parentId) {\n                const threadId = `${post.threadId}`\n                const addReply = thread => {\n                    if (thread.threadId === threadId) {\n                        return {\n                            ...thread,\n                            posts: [\n                                ...thread.posts,\n                                post\n                            ]\n                        }\n                    }\n                    return thread\n                }\n\n                return {\n                    threads: current.threads.map(addReply),\n                    newThreads: current.newThreads.map(addReply)\n                }\n            } else {\n                return {\n                    threads: current.threads,\n                    newThreads: [\n                        ...current.newThreads,\n                        {\n                            threadId: `${post.id}`,\n                            posts: [\n                                post\n                            ]\n                        }\n                    ]\n                }\n            }\n        } else if (eventType === 'categoryChange') {\n            const {postId, category} = eventData\n            const updateCategory = thread => {\n                const threadContainsUpdate = thread.posts.find(post => post.id === postId)\n                if (threadContainsUpdate) {\n                    const posts = thread.posts\n                        .map(post => {\n                            if (post.id === postId) {\n                                return {...post, category}\n                            }\n                            return post\n                        })\n                    return {...thread, posts}\n                }\n                return thread\n            }\n\n            return {\n                threads: current.threads.map(updateCategory),\n                newThreads: current.newThreads.map(updateCategory)\n            }\n        } else if (eventType === 'lolCountsUpdate') {\n            const {updates} = eventData\n            const updatedPostsById = updates\n                .reduce(((acc, {postId, tag, count}) => ({\n                    ...acc,\n                    [postId]: {tag, count}\n                })), {})\n            const updateTags = thread => {\n                const threadContainsUpdate = thread.posts.find(post => updatedPostsById[post.id])\n                if (threadContainsUpdate) {\n                    const posts = thread.posts\n                        .map(post => {\n                            const updated = updatedPostsById[post.id]\n                            if (updated) {\n                                const lols = (post.lols || [])\n                                    .filter(tag => tag.tag !== updated.tag)\n                                    .concat([updated])\n                                return {...post, lols}\n                            }\n                            return post\n                        })\n                    return {...thread, posts}\n                }\n                return thread\n            }\n\n            return {\n                threads: current.threads.map(updateTags),\n                newThreads: current.newThreads.map(updateTags)\n            }\n        } else {\n            console.debug('Unhandled event type:', event)\n        }\n    }\n\n    const refreshChatty = async () => {\n        await updateThreads(false, false, true)\n        window.scrollTo(0, 0)\n    }\n\n    // full load of chatty on start\n    useEffect(() => {\n        fullReload()\n        return () => mounted = false\n    }, [isLoggedIn])\n\n    // wait for events\n    useEffect(() => {\n        waitForEvent(lastEventId)\n    }, [lastEventId])\n\n    // handle events\n    useEffect(() => {\n        const newChatty = events.reduce((current, event) => handleEvent(event, current), chatty)\n        setChatty(newChatty)\n    }, [events])\n\n    const contextValue = {\n        ...chatty,\n        refreshChatty\n    }\n\n    return (\n        <ChattyContext.Provider value={contextValue}>\n            {children}\n        </ChattyContext.Provider>\n    )\n}\n\nexport default ChattyProvider\n","import React from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction AsyncLoadingIndicator({loading}) {\n    const classes = useStyles()\n    if (loading !== 'async') return null\n    return <LinearProgress className={classes.progress} color='secondary'/>\n}\n\nconst useStyles = makeStyles({\n    progress: {\n        zIndex: 9999,\n        position: 'fixed',\n        top: 0,\n        width: '100vw'\n    }\n})\n\nexport default AsyncLoadingIndicator\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction SyncLoadingIndicator({loading}) {\n    const classes = useStyles()\n    if (loading !== 'sync') return null\n    return (\n        <div className={classes.container}>\n            <CircularProgress\n                className={classes.progress}\n                size={60}\n                thickness={4}\n                color='secondary'\n            />\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        zIndex: 99999,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.2)'\n    },\n    progress: {\n        position: 'absolute',\n        top: 'calc(50% - 60px)',\n        left: 'calc(50% - 60px)'\n    }\n})\n\nexport default SyncLoadingIndicator\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nfunction Snackbars({snackbars, setSnackbars}) {\n    const handleClose = () => setSnackbars(snackbars.slice(1))\n    let open = false\n    let message = ''\n    if (snackbars.length) {\n        open = true\n        message = snackbars[0]\n    }\n    return (\n        <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            autoHideDuration={6000}\n            open={open}\n            onClose={handleClose}\n            onExited={handleClose}\n            message={<span>{message}</span>}\n        />\n    )\n}\n\nexport default Snackbars\n","import React, {useState} from 'react'\nimport IndicatorContext from './IndicatorContext'\nimport AsyncLoadingIndicator from './AsyncLoadingIndicator'\nimport SyncLoadingIndicator from './SyncLoadingIndicator'\nimport Snackbars from './Snackbars'\n\nfunction IndicatorProvider({children}) {\n    const [loading, setLoading] = useState(false)\n    const [snackbars, setSnackbars] = useState([])\n\n    const showSnackbar = message => setSnackbars(snackbars.concat([message]))\n\n    const contextValue = {\n        setLoading,\n        showSnackbar\n    }\n\n    return (\n        <IndicatorContext.Provider value={contextValue}>\n            <SyncLoadingIndicator loading={loading}/>\n            <AsyncLoadingIndicator loading={loading}/>\n            <Snackbars snackbars={snackbars} setSnackbars={setSnackbars}/>\n            {children}\n        </IndicatorContext.Provider>\n    )\n}\n\nexport default IndicatorProvider\n","import React, {useState} from 'react'\nimport FilterContext from './FilterContext'\n\nfunction FilterProvider({children}) {\n    const [filterSettings, setFilterSettings] = useState({\n        showCollapsed: false,\n        showFilteredUsers: false,\n        filteredUsers: [],\n        showFilteredTerms: false,\n        filteredTerms: []\n    })\n\n    const isPostVisible = (thread, post = thread) => {\n        const {\n            showCollapsed,\n            showFilteredUsers,\n            filteredUsers,\n            showFilteredTerms,\n            filteredTerms\n        } = filterSettings\n\n        if (!showCollapsed && thread.markType === 'collapsed') return false\n        else if (!showFilteredUsers && filteredUsers.some(({regex}) => regex.test(post.author))) return false\n        else if (!showFilteredTerms && filteredTerms.some(({regex}) => regex.test(post.body))) return false\n\n        return true\n    }\n\n    const updateFilterSettings = updatedSettings => setFilterSettings({...filterSettings, updatedSettings})\n\n    const contextValue = {\n        filterSettings,\n        updateFilterSettings,\n        isPostVisible\n    }\n\n    return (\n        <FilterContext.Provider value={contextValue}>\n            {children}\n        </FilterContext.Provider>\n    )\n}\n\nexport default FilterProvider\n","import createHistory from 'history/createBrowserHistory'\nconst history = createHistory({})\nexport default history\n","import React from 'react'\nimport {ThemeProvider} from '@material-ui/styles'\nimport Theme from './Theme'\nimport App from './App'\nimport AuthProvider from '../context/auth/AuthProvider'\nimport ChattyProvider from '../context/chatty/ChattyProvider'\nimport './global.css'\nimport './shacktags.css'\nimport './comment_tree.css'\nimport IndicatorProvider from '../context/indicators/IndicatorProvider'\nimport FilterProvider from '../context/filter/FilterProvider'\nimport {Router} from 'react-router-dom'\nimport history from '../history'\n\nfunction Root() {\n    return (\n        <Router history={history}>\n            <ThemeProvider theme={Theme}>\n                <IndicatorProvider>\n                    <AuthProvider>\n                        <ChattyProvider>\n                            <FilterProvider>\n                                <App/>\n                            </FilterProvider>\n                        </ChattyProvider>\n                    </AuthProvider>\n                </IndicatorProvider>\n            </ThemeProvider>\n        </Router>\n    )\n}\n\nexport default Root\n","import './installStyle'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './app/Root'\n\nconst render = Component => ReactDOM.render(<Component/>, document.getElementById('root'))\n\nrender(Root)\n\nif (module.hot) {\n    module.hot.accept('./app/Root', () => {\n        const next = require('./app/Root').default\n        render(next)\n    })\n}\n"],"sourceRoot":""}